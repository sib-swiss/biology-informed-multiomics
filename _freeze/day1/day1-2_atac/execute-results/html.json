{
  "hash": "c2409a5fdd40a76c5a812b70af17b614",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Exercise 2\"\neditor: source\neditor_options: \n  chunk_output_type: console\n---\n\n# Enriched Heatmaps and identification of regions with different activities\n\n## Learning Objectives\n\n- By the end of this section, you will be able to:\n- Distinguish between when to use `Heatmap()` and `HeatmapAnnotation()`\n- Generate row split annotations for enriched heatmaps\n- Add multiple categorical annotations with separate color legends\n- Avoid common data handling errors in `heatmap` plotting\n\n\n## Load Libraries\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(SummarizedExperiment)\nlibrary(EnrichedHeatmap)\nlibrary(gUtils)\nlibrary(rtracklayer)\nlibrary(circlize)\nlibrary(GenomicRanges)\n```\n:::\n\n\n\n## ATAC SE object\nHere we load the `SummarizedExperiment` for the ATAC-seq data\n\n::: {.cell}\n\n```{.r .cell-code}\natac <- readRDS(\"data/atac_se.rds\")\n```\n:::\n\n\n\n## ATAC peaks info\nEach peak region represent the activity in a genomic region. These peaks are annotated for various features, including their genomic annotations and the results for differential accessibility analysis is also added there.\n\n::: {.cell}\n\n```{.r .cell-code}\nrowRanges(atac)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGRanges object with 3656 ranges and 18 metadata columns:\n         seqnames              ranges strand |             annotation   geneChr\n            <Rle>           <IRanges>  <Rle> |            <character> <integer>\n     [1]     chr1     3670547-3672665      * |       Promoter (<=1kb)         1\n     [2]     chr1     4332510-4332710      * | Intron (ENSMUST00000..         1\n     [3]     chr1     4491755-4492573      * |       Promoter (1-2kb)         1\n     [4]     chr1     4571186-4572423      * |      Distal Intergenic         1\n     [5]     chr1     4785062-4786325      * |       Promoter (<=1kb)         1\n     ...      ...                 ...    ... .                    ...       ...\n  [3652]     chr2 181764664-181764891      * |       Promoter (1-2kb)         2\n  [3653]     chr2 181766881-181767875      * |       Promoter (<=1kb)         2\n  [3654]     chr2 181837244-181838655      * |       Promoter (<=1kb)         2\n  [3655]     chr2 181863853-181865066      * |       Promoter (<=1kb)         2\n  [3656]     chr2 181918525-181918853      * |      Distal Intergenic         2\n         geneStart   geneEnd geneLength geneStrand      geneId\n         <integer> <integer>  <integer>  <integer> <character>\n     [1]   3214482   3671498     457017          2      497097\n     [2]   4344146   4360314      16169          2       19888\n     [3]   4492465   4493735       1271          2       20671\n     [4]   4491390   4497354       5965          2       20671\n     [5]   4773206   4785710      12505          2       27395\n     ...       ...       ...        ...        ...         ...\n  [3652] 181763332 181827797      64466          1       17932\n  [3653] 181767029 181795892      28864          1       17932\n  [3654] 181837854 181857461      19608          1      245867\n  [3655] 181864337 181870830       6494          1       67005\n  [3656] 181864360 181866209       1850          1       67005\n                  transcriptId distanceToTSS            ENSEMBL      SYMBOL\n                   <character>     <numeric>        <character> <character>\n     [1]  ENSMUST00000070533.4             0 ENSMUSG00000051951        Xkr4\n     [2]  ENSMUST00000027032.5         27604 ENSMUSG00000025900         Rp1\n     [3]  ENSMUST00000191939.1          1162 ENSMUSG00000025902       Sox17\n     [4]  ENSMUST00000192650.5        -73832 ENSMUSG00000025902       Sox17\n     [5]  ENSMUST00000130201.7             0 ENSMUSG00000033845      Mrpl15\n     ...                   ...           ...                ...         ...\n  [3652] ENSMUST00000081125.10          1332 ENSMUSG00000010505        Myt1\n  [3653]  ENSMUST00000156190.7             0 ENSMUSG00000010505        Myt1\n  [3654] ENSMUST00000029116.13             0 ENSMUSG00000027589      Pcmtd2\n  [3655]  ENSMUST00000039551.8             0 ENSMUSG00000038628      Polr3k\n  [3656]  ENSMUST00000153214.1         54165 ENSMUSG00000038628      Polr3k\n                       GENENAME        anno     logFC    logCPM         F\n                    <character> <character> <numeric> <numeric> <numeric>\n     [1] X-linked Kx blood gr..    Promoter  0.602984  10.45378  41.78446\n     [2] retinitis pigmentosa..      Intron  0.855748   5.18424   3.68371\n     [3] SRY (sex determining..    Promoter -0.620926   7.13469   9.14522\n     [4] SRY (sex determining..  Intergenic -0.511046   8.90885  15.15688\n     [5] mitochondrial riboso..    Promoter  0.540908   8.63469  15.08892\n     ...                    ...         ...       ...       ...       ...\n  [3652] myelin transcription..    Promoter -1.275275   5.54135  10.44866\n  [3653] myelin transcription..    Promoter  0.477658   7.56969   6.03877\n  [3654] protein-L-isoasparta..    Promoter  0.689247   7.92175  16.67881\n  [3655] polymerase (RNA) III..    Promoter  0.241693   9.05746   4.06676\n  [3656] polymerase (RNA) III..  Intergenic  0.394577   6.84745   2.73331\n              PValue      qvalue\n           <numeric>   <numeric>\n     [1] 6.58453e-08 4.81983e-07\n     [2] 6.13517e-02 9.28785e-02\n     [3] 4.12368e-03 8.38540e-03\n     [4] 3.27158e-04 8.67115e-04\n     [5] 3.36058e-04 8.82634e-04\n     ...         ...         ...\n  [3652] 0.002309221  0.00497558\n  [3653] 0.017945118  0.03116850\n  [3654] 0.000181039  0.00051468\n  [3655] 0.049773014  0.07677364\n  [3656] 0.105289776  0.15077925\n  -------\n  seqinfo: 21 sequences from an unspecified genome; no seqlengths\n```\n\n\n:::\n\n```{.r .cell-code}\nrd_atac <- rowRanges(atac)\nrd_atac <- rd_atac[abs(rd_atac$logFC) >= 0.5 & rd_atac$qvalue <= 0.1]\ncolnames(elementMetadata(rd_atac)) <- paste(\"ATAC\", colnames(elementMetadata(rd_atac)), sep = \"_\")\n```\n:::\n\n\n\n## Taking 1000 bp around the mid of ATAC-peaks\nMost of the peaks are around 1000 bp wide. We can check that\n\n::: {.cell}\n\n```{.r .cell-code}\nmedian(lengths(rowRanges(atac)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1031\n```\n\n\n:::\n:::\n\n\nFor plotting the data, we can hence consider 1000 bp around the **peak-mid**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Finding mid of all peaks\nmid_peaks <- gr.mid(rd_atac)\n\n# adding names to peaks to give them identity\nnames(mid_peaks) <- paste(\"peak\", 1:length(mid_peaks), sep = \"_\")\n```\n:::\n\n\n## Normalizing data for plotting\n`bigWig` files are compressed, indexed, binary format used for efficiently displaying continuous data, like genomic signal data, in genome browsers. Here, we read in ATAC-seq `bigWig` files, filters the data to specific chromosomes, normalizes signal intensity around genomic regions of interest (peak centers), and saves the resulting matrices for downstream visualization.\n\n\n::: {.cell}\n\n```{.r .cell-code}\natac_files <- list.files(\"data\", pattern = \"ATAC\", full.names = TRUE)\nnames(atac_files) <- gsub(pattern = \"\\\\.bw\", replacement = \"\", x = basename(atac_files))\natac_bw <- lapply(atac_files, function(x){\n  a <- rtracklayer::import(x)\n  a <- a[seqnames(a) %in% c(\"chr1\", \"chr2\")]\n  a\n})\n```\n:::\n\n\n`bigWig` files are represented as `GRanges`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\natac_bw\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$ATAC_11half\nGRanges object with 6354084 ranges and 1 metadata column:\n            seqnames              ranges strand |     score\n               <Rle>           <IRanges>  <Rle> | <numeric>\n        [1]     chr1           1-3000000      * | 0.0000000\n        [2]     chr1     3000001-3000050      * | 0.0225005\n        [3]     chr1     3000051-3000100      * | 0.0600013\n        [4]     chr1     3000101-3000150      * | 0.0337507\n        [5]     chr1     3000151-3000200      * | 0.0375008\n        ...      ...                 ...    ... .       ...\n  [6354080]     chr2 182013051-182013100      * |   45.3122\n  [6354081]     chr2 182013101-182013150      * |   49.6173\n  [6354082]     chr2 182013151-182013200      * |   79.4379\n  [6354083]     chr2 182013201-182013250      * |   50.2623\n  [6354084]     chr2 182013251-182113224      * |    0.0000\n  -------\n  seqinfo: 66 sequences from an unspecified genome\n\n$ATAC_15half\nGRanges object with 5356375 ranges and 1 metadata column:\n            seqnames              ranges strand |      score\n               <Rle>           <IRanges>  <Rle> |  <numeric>\n        [1]     chr1           1-3000400      * | 0.00000000\n        [2]     chr1     3000401-3000500      * | 0.00844927\n        [3]     chr1     3000501-3000550      * | 0.00000000\n        [4]     chr1     3000551-3000650      * | 0.00844927\n        [5]     chr1     3000651-3003300      * | 0.00000000\n        ...      ...                 ...    ... .        ...\n  [5356371]     chr2 182012501-182012600      * | 0.01689850\n  [5356372]     chr2 182012601-182012650      * | 0.00844927\n  [5356373]     chr2 182012651-182012900      * | 0.00000000\n  [5356374]     chr2 182012901-182013000      * | 0.01689850\n  [5356375]     chr2 182013001-182113224      * | 0.00000000\n  -------\n  seqinfo: 66 sequences from an unspecified genome\n```\n\n\n:::\n:::\n\n\n\nNext, we calculate the normalized signals into the area of our interest. Please check `?normalizeToMatrix` for details of this function\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmat_AS <- lapply(atac_bw, FUN = function(x) {\n  normalizeToMatrix(x, mid_peaks,\n    extend = 1000,\n    value_column = \"score\",\n    include_target = TRUE,\n    mean_mode = \"w0\",\n    w = 20,\n    smooth = T,\n    background = 0\n  )\n})\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Width of `target` are all 1, `include_target` is set to `FALSE`.\nWarning: Width of `target` are all 1, `include_target` is set to `FALSE`.\n```\n\n\n:::\n\n```{.r .cell-code}\nmat_AS\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$ATAC_11half\nNormalize x to mid_peaks:\n  Upstream 1000 bp (50 windows)\n  Downstream 1000 bp (50 windows)\n  Include target regions (width = 1)\n  1933 target regions\n\n$ATAC_15half\nNormalize x to mid_peaks:\n  Upstream 1000 bp (50 windows)\n  Downstream 1000 bp (50 windows)\n  Include target regions (width = 1)\n  1933 target regions\n```\n\n\n:::\n:::\n\n\n## Enriched heatmap\n\n**Enriched heatmap** is a special type of heatmap which visualizes the enrichment of genomic signals over specific target regions.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nEnrichedHeatmap(mat = mat_AS$ATAC_11half, name = \"E11.5\") + \n  EnrichedHeatmap(mat = mat_AS$ATAC_15half, name = \"E15.5\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe automatically generated colors map from the 1^st and 99^th of the\nvalues in the matrix. There are outliers in the matrix whose patterns\nmight be hidden by this color mapping. You can manually set the color\nto `col` argument.\n\nUse `suppressMessages()` to turn off this message.\nThe automatically generated colors map from the 1^st and 99^th of the\nvalues in the matrix. There are outliers in the matrix whose patterns\nmight be hidden by this color mapping. You can manually set the color\nto `col` argument.\n\nUse `suppressMessages()` to turn off this message.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](day1-2_atac_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nJoining 2 `EnrichedHeatmaps` is very easy with a `+` sign.\n\n## Changing aesthectics of Enriched heatmap\n\nLet's work on one data for now.\n\n### Changind color and size\n\n::: {.cell}\n\n```{.r .cell-code}\nEnrichedHeatmap(\n  mat = mat_AS$ATAC_11half,    # normalized matrix\n  name = \"E11.5\",              # Name for the plot\n  col = c(\"white\", \"red\"),     # We change the colors for low to high values\n  width = unit(4, \"cm\"),       # Width of the heatmap\n  height = unit(8, \"cm\")      # Height of the heatmap\n)\n```\n\n::: {.cell-output-display}\n![](day1-2_atac_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nYou may wonder why the color looks so light. The reason is in coverage values in ATAC, there exist some extreme values, which results in extreme value in `normalizedMatrix`.\n\n### Color based on quantile\n\n::: {.cell}\n\n```{.r .cell-code}\n# Taking data between 1 and 99 percentile\ncol_fun <- colorRamp2(quantile(mat_AS$ATAC_11half, c(0.01, 0.99)), c(\"white\", \"red\"))\n\nEnrichedHeatmap(\n  mat = mat_AS$ATAC_11half,\n  name = \"E11.5\",\n  col = col_fun,\n  width = unit(4, \"cm\"),\n  height = unit(8, \"cm\")\n)\n```\n\n::: {.cell-output-display}\n![](day1-2_atac_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n### Changing some other aesthetics\n\n::: {.cell}\n\n```{.r .cell-code}\n# We first change the color legent of the plot to show only 3 values\nvmin <- as.numeric(quantile(mat_AS$ATAC_11half, c(0.01)))\nvmax <- as.numeric(quantile(mat_AS$ATAC_11half, c(0.99)))\nvmid <- (vmin + vmax) / 2\nlegend_ticks <- c(vmin, vmid, vmax)\n\nEnrichedHeatmap(\n  mat = mat_AS$ATAC_11half,\n  name = \"E11.5\",\n  col = col_fun,\n  width = unit(4, \"cm\"),\n  height = unit(8, \"cm\"),\n  column_title = \"E11.5\",\n  column_title_gp = gpar(fontsize = 10, fill = \"#ffcccc\"),\n  axis_name = c(\"-1kb\", \"mid\", \"1kb\"),  # We changed the axis names here\n heatmap_legend_param = list(\n    at = legend_ticks,\n    labels = round(legend_ticks, digits = 1),\n    title_gp = gpar(fontsize = 8),\n    labels_gp = gpar(fontsize = 7)\n  ),\n  top_annotation = HeatmapAnnotation(\n    lines = anno_enriched(\n      height = unit(2, \"cm\"),\n      gp = gpar(\n        lwd = 0.7,\n        fontsize = 5\n      ),\n      axis_param = list(\n        side = \"right\",\n        facing = \"inside\",\n        gp = gpar(\n          fontsize = 7,\n          col = \"black\",\n          lwd = 0.4\n        )\n      )\n    )\n  )\n)\n```\n\n::: {.cell-output-display}\n![](day1-2_atac_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n### Split the Enriched heatmap based on `logFC` values\n\nAlthough we see some signal here, but it might be a good idea to split the heatmap into the regions which gained and lost accessibility.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsplit_change <- ifelse(mid_peaks$ATAC_logFC > 0, yes = \"Increased accessibility\", no = \"Decreased accessibility\")\nnames(split_change) <- names(mid_peaks)\n\nhead(split_change)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                   peak_1                    peak_2                    peak_3 \n\"Increased accessibility\" \"Increased accessibility\" \"Decreased accessibility\" \n                   peak_4                    peak_5                    peak_6 \n\"Decreased accessibility\" \"Increased accessibility\" \"Decreased accessibility\" \n```\n\n\n:::\n\n```{.r .cell-code}\n# Define cluster colors\ncluster_colors <- c(\"Increased accessibility\" = \"red\", \"Decreased accessibility\" = \"blue\")\n\n# Make sure split_change has levels matching the color names\nsplit_change <- factor(split_change, levels = names(cluster_colors))\n\nEnrichedHeatmap(\n  mat = mat_AS$ATAC_11half,\n  name = \"E11.5\",\n  row_split = split_change,\n  col = col_fun,\n  width = unit(4, \"cm\"),\n  height = unit(8, \"cm\"),\n  column_title = \"E11.5\",\n  column_title_gp = gpar(fontsize = 10, fill = \"#ffcccc\"),\n  axis_name = c(\"-1kb\", \"mid\", \"1kb\"),\n  heatmap_legend_param = list(\n    at = legend_ticks,\n    labels = round(legend_ticks, digits = 1),\n    title_gp = gpar(fontsize = 8),\n    labels_gp = gpar(fontsize = 7)\n  ),\n  top_annotation = HeatmapAnnotation(\n    lines = anno_enriched(\n      gp = gpar(col = cluster_colors),\n      height = unit(2, \"cm\"),\n      axis_param = list(\n        side = \"right\",\n        facing = \"inside\",\n        gp = gpar(\n          fontsize = 7,\n          lwd = 0.4\n        )\n      )\n    )\n  )\n)\n```\n\n::: {.cell-output-display}\n![](day1-2_atac_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n### Make a function to make this heatmap\n\nAs you know we have at least 2 samples as of now. It will be a good idea to create a `function` to make this heatmap.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmake_EH <- function(norm_mat, heatmap_cols = c(\"white\", \"red\"), split_rows = NULL, hm_name, col_fill = \"#ffcccc\"){\n  col_fun <- colorRamp2(quantile(norm_mat, c(0.01, 0.99)), heatmap_cols)  \n  \n  vmin <- as.numeric(quantile(norm_mat, c(0.01)))\n  vmax <- as.numeric(quantile(norm_mat, c(0.99)))\n  vmid <- (vmin + vmax) / 2\n  legend_ticks <- c(vmin, vmid, vmax)\n\nEnrichedHeatmap(\n  mat = norm_mat,\n  name = hm_name,\n  row_split = split_rows,\n  col = col_fun,\n  width = unit(4, \"cm\"),\n  height = unit(8, \"cm\"),\n  column_title = hm_name,\n  column_title_gp = gpar(fontsize = 10, fill = col_fill),\n  axis_name = c(\"-1kb\", \"mid\", \"1kb\"),\n  heatmap_legend_param = list(\n    at = legend_ticks,\n    labels = round(legend_ticks, digits = 1),\n    title_gp = gpar(fontsize = 8),\n    labels_gp = gpar(fontsize = 7)\n  ),\n  top_annotation = HeatmapAnnotation(\n    lines = anno_enriched(\n      gp = gpar(col = cluster_colors),\n      height = unit(2, \"cm\"),\n      axis_param = list(\n        side = \"right\",\n        facing = \"inside\",\n        gp = gpar(\n          fontsize = 7,\n          lwd = 0.4\n        )\n      )\n    )\n  )\n)\n}\n```\n:::\n\n\n\n### Make Enriched Heatmaps for both ATAC samples\n\n::: {.cell}\n\n```{.r .cell-code}\neh_11h <- make_EH(norm_mat = mat_AS$ATAC_11half, split_rows = split_change, hm_name = \"E11.5\")\neh_15h <- make_EH(norm_mat = mat_AS$ATAC_15half, split_rows = split_change, hm_name = \"E15.5\", col_fill = \"#e6fff2\")\n\ndraw(eh_11h + eh_15h, merge_legend = TRUE)\n```\n\n::: {.cell-output-display}\n![](day1-2_atac_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n## Another way to make annotations for split\n\nIt is probably a good idea to represent clusters with colors, instead of text\n\n\n::: {.cell}\n\n```{.r .cell-code}\neh_11h <- make_EH(norm_mat = mat_AS$ATAC_11half, hm_name = \"E11.5\")\neh_15h <- make_EH(norm_mat = mat_AS$ATAC_15half, hm_name = \"E15.5\", col_fill = \"#e6fff2\")\n\nrow_order_eh <- row_order(eh_11h)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: The heatmap has not been initialized. You might have different results\nif you repeatedly execute this function, e.g. when row_km/column_km was\nset. It is more suggested to do as `ht = draw(ht); row_order(ht)`.\n```\n\n\n:::\n\n```{.r .cell-code}\nanno_hm <- Heatmap(\n  split_change,\n  col = c(\"red\", \"blue\"), \n  name = \"Change\",\n  show_row_names = FALSE, \n  show_column_names = FALSE, \n  width = unit(3, \"mm\"),\n  height = unit(8, \"cm\"),\n  row_order = row_order_eh,\n  row_title_gp = gpar(fontsize = 0)\n)\n\ndraw(anno_hm + eh_11h + eh_15h, split = split_change, merge_legend = TRUE)\n```\n\n::: {.cell-output-display}\n![](day1-2_atac_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n## Question 1\n\n**Can you make split the Enriched Heatmap based on the annotations?**\n\n**_Hint:_** `mid_peaks$ATAC_anno` contain annotations for the regions. \n\n:::{.callout-tip collapse=\"true\"}\n\n### Answer\n\n::: {.cell}\n\n```{.r .cell-code}\nsplit_anno <- mid_peaks$ATAC_anno\nnames(split_anno) <- names(mid_peaks)\n\nhead(split_anno)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      peak_1       peak_2       peak_3       peak_4       peak_5       peak_6 \n  \"Promoter\"     \"Intron\"   \"Promoter\" \"Intergenic\"   \"Promoter\" \"Intergenic\" \n```\n\n\n:::\n\n```{.r .cell-code}\ncols_an <- RColorBrewer::brewer.pal(n = length(unique(split_anno)), name = \"Set1\")\n\nanno_an <- Heatmap(\n  split_anno,\n  col = cols_an, \n  name = \"anno\",\n  show_row_names = FALSE, \n  show_column_names = FALSE, \n  width = unit(3, \"mm\"),\n  height = unit(8, \"cm\"),\n  row_order = row_order_eh,\n  row_title_gp = gpar(fontsize = 0)\n)\n\ndraw(anno_an + eh_11h + eh_15h, split = split_anno, merge_legend = TRUE)\n```\n\n::: {.cell-output-display}\n![](day1-2_atac_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n:::\n\n## Question 2\n\n**Can you make split the Enriched Heatmap based on the annotations and change in direction?**\n\n**_Hint:_** `mid_peaks$ATAC_anno` contain annotations for the regions. `mid_peaks$ATAC_logFC` contain sign of change.\n\n:::{.callout-tip collapse=\"true\"}\n\n### Answer\n\n::: {.cell}\n\n```{.r .cell-code}\nsplit_anno_dir <- paste(mid_peaks$ATAC_anno, ifelse(mid_peaks$ATAC_logFC > 0, yes = \"Inc\", no = \"Dec\"))\nnames(split_anno_dir) <- names(mid_peaks)\n\nhead(split_anno_dir)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          peak_1           peak_2           peak_3           peak_4 \n  \"Promoter Inc\"     \"Intron Inc\"   \"Promoter Dec\" \"Intergenic Dec\" \n          peak_5           peak_6 \n  \"Promoter Inc\" \"Intergenic Dec\" \n```\n\n\n:::\n\n```{.r .cell-code}\ncols_an <- RColorBrewer::brewer.pal(n = length(unique(split_anno_dir)), name = \"Paired\")\n\nanno_an_dir <- Heatmap(\n  split_anno_dir,\n  col = cols_an, \n  name = \"anno\",\n  show_row_names = FALSE, \n  show_column_names = FALSE, \n  width = unit(3, \"mm\"),\n  height = unit(8, \"cm\"),\n  row_order = row_order_eh,\n  row_title_gp = gpar(fontsize = 0)\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThere are 10 unique colors in the vector `col` and 10 unique values in\n`matrix`. `Heatmap()` will treat it as an exact discrete one-to-one\nmapping. If this is not what you want, slightly change the number of\ncolors, e.g. by adding one more color or removing a color.\n```\n\n\n:::\n\n```{.r .cell-code}\ndraw(anno_an_dir + eh_11h + eh_15h, split = split_anno_dir, merge_legend = TRUE)\n```\n\n::: {.cell-output-display}\n![](day1-2_atac_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n:::\n\n## Question 3\n\n**Can you make split the Enriched Heatmap based on the annotations and change in direction with separate color bars for annotation and direction of change?**\n\n**_Hint:_** `mid_peaks$ATAC_anno` contain annotations for the regions. `mid_peaks$ATAC_logFC` contain sign of change.\n\n:::{.callout-tip collapse=\"true\"}\n\n### Answer\n\n::: {.cell}\n\n```{.r .cell-code}\nsplit_anno_df <- data.frame(\n  Annotation = mid_peaks$ATAC_anno,\n  Direction = ifelse(mid_peaks$ATAC_logFC > 0, yes = \"Inc\", no = \"Dec\")\n)\n\nhead(split_anno_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Annotation Direction\n1   Promoter       Inc\n2     Intron       Inc\n3   Promoter       Dec\n4 Intergenic       Dec\n5   Promoter       Inc\n6 Intergenic       Dec\n```\n\n\n:::\n\n```{.r .cell-code}\ncols_an <- c(\"red\", \"blue\", \n             RColorBrewer::brewer.pal(n = length(unique(split_anno_df$Annotation)), name = \"Set1\")\n)\n\nnames(cols_an) <- c(unique(split_anno_df$Direction), unique(split_anno_df$Annotation))\n\nanno_an_df <- Heatmap(\n  split_anno_df,\n  name = \"anno\",\n  col = cols_an,\n  show_row_names = FALSE, \n  show_column_names = FALSE, \n  width = unit(3, \"mm\"),\n  height = unit(8, \"cm\"),\n  row_order = row_order_eh,\n  row_title_gp = gpar(fontsize = 0)\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: The input is a data frame-like object, convert it to a matrix.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Note: not all columns in the data frame are numeric. The data frame\nwill be converted into a character matrix.\n```\n\n\n:::\n\n```{.r .cell-code}\ndraw(anno_an_df + eh_11h + eh_15h, split = split_anno_dir, merge_legend = TRUE)\n```\n\n::: {.cell-output-display}\n![](day1-2_atac_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n:::\n\n:::{.callout-important}\n**`Heatmap` and `EnrichedHeatmap` serve different functions, however the plots can be combined effortlessly. This makes  the visualization of complex data easy.**\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}