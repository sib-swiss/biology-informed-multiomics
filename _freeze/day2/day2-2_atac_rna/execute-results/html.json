{
  "hash": "cce60884c02ba64ea43e0042256a7e4a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Exercise 5\"\neditor: source\neditor_options: \n  chunk_output_type: console\n---\n\n# Integrating ATAC and RNA sequencing data\n\n![](../assets/images/atac_rna.png)\n\n## Learning Objectives\n\nBy the end of this exercise, you will be able to:\n\n- Load and manipulate `SummarizedExperiment` objects containing ATAC-seq and RNA-seq data.\n- Understand how to categorize genomic regions based on combined accessibility (ATAC) and expression (RNA) changes.\n- Annotate genomic regions with meaningful biological categories such as \"Active\", \"Repressed\", \"Silent\", and others.\n- Use the `ComplexHeatmap` and `EnrichedHeatmap` packages to visualize multi-omics data with customizable heatmaps.\n- Implement and modify heatmap functions to integrate and compare ATAC and RNA signal patterns across samples.\n- Adjust factor levels to control the order of categories in heatmaps for clear biological interpretation.\n- Combine multiple heatmaps and annotations for integrative visualization of chromatin accessibility and gene expression.\n\n\n## Load Libraries\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ComplexHeatmap)\nlibrary(EnrichedHeatmap)\nlibrary(circlize)\nlibrary(SummarizedExperiment)\n```\n:::\n\n\n\n## Load required objects from previous exercises\nHere we load the `SummarizedExperiment` for the ChIP-seq data\n\n::: {.cell}\n\n```{.r .cell-code}\natac <- readRDS(\"data/atac_se.rds\")\nrna <- readRDS(\"data/rna_se.rds\")\nrownames(colData(rna)) <- gsub(pattern = \"\\\\.tsv.gz\", replacement = \"\", x = rownames(colData(rna)))\n\noverlap <- readRDS(\"output/overlap_data.rds\")\n\nmat_ATAC <- readRDS(\"output/mat_atac.rds\")\nmat_RNA <- readRDS(\"output/mat_rna.rds\")\n```\n:::\n\n\n\n## Add possible genomic regions for ATAC and RNA\n\nBased on the table above, we will assign categories to the `overlapMatrix`.\n\n::: {.cell}\n\n```{.r .cell-code}\noverlap$ATAC_RNA <- NULL\n\n# Increased accessibility and increased expression\noverlap$ATAC_RNA[overlap$ATAC_logFC > 0 & overlap$RNA_logFC > 0] <- \"Active\"\n\n# Increased accessibility and decreased expression\noverlap$ATAC_RNA[overlap$ATAC_logFC > 0 & overlap$RNA_logFC < 0] <- \"Repressed\"\n\n# Decreased accessibility and decreased expression\noverlap$ATAC_RNA[overlap$ATAC_logFC < 0 & overlap$RNA_logFC < 0] <- \"Silent\"\n\n# Decreased accessibility and increased expression (incongruent)\noverlap$ATAC_RNA[overlap$ATAC_logFC < 0 & overlap$RNA_logFC > 0] <- \"Incongruent\"\n\n# Accessibility changes, but no gene expression info\noverlap$ATAC_RNA[overlap$ATAC_logFC < 0 & is.na(overlap$RNA_logFC)] <- \"Dec. Acc.\"\noverlap$ATAC_RNA[overlap$ATAC_logFC > 0 & is.na(overlap$RNA_logFC)] <- \"Inc. Acc.\"\n\nsaveRDS(object = overlap, file = \"output/overlap_anno.rds\")\n```\n:::\n\n\n\n## `EnrichedHeatmap` + `ComplexHeatmap`\n\n### Our function from previous exercise\n\n::: {.cell}\n\n```{.r .cell-code}\nmake_EH <- function(norm_mat, heatmap_cols = c(\"white\", \"red\"), split_rows = NULL, hm_name, col_fill = \"#ffcccc\"){\n  col_fun <- colorRamp2(quantile(norm_mat, c(0.01, 0.99)), heatmap_cols)  \n  \n  vmin <- as.numeric(quantile(norm_mat, c(0.01)))\n  vmax <- as.numeric(quantile(norm_mat, c(0.99)))\n  vmid <- (vmin + vmax) / 2\n  legend_ticks <- c(vmin, vmid, vmax)\n\nEnrichedHeatmap(\n  mat = norm_mat,\n  name = hm_name,\n  row_split = split_rows,\n  col = col_fun,\n  width = unit(2, \"cm\"),\n  height = unit(8, \"cm\"),\n  column_title = hm_name,\n  column_title_gp = gpar(fontsize = 8, fill = col_fill),\n  axis_name = c(\"-1kb\", \"mid\", \"1kb\"),\n  heatmap_legend_param = list(\n    at = legend_ticks,\n    legend_height = unit(0.5, \"cm\"),\n    legend_width = unit(0.1, \"cm\"),\n    labels = round(legend_ticks, digits = 1),\n    title_gp = gpar(fontsize = 8),\n    labels_gp = gpar(fontsize = 7)\n  ),\n  top_annotation = HeatmapAnnotation(\n    lines = anno_enriched(\n      height = unit(1, \"cm\"),\n      axis_param = list(\n        side = \"right\",\n        facing = \"inside\",\n        gp = gpar(\n          fontsize = 7,\n          lwd = 0.4\n        )\n      )\n    )\n  )\n)\n}\n```\n:::\n\n\n\n### ATAC\n\n::: {.cell}\n\n```{.r .cell-code}\nsplit_anno <- overlap$ATAC_RNA\nnames(split_anno) <- names(overlap)\n\nhead(split_anno)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     peak_1      peak_2      peak_3      peak_4      peak_5      peak_6 \n   \"Active\" \"Inc. Acc.\" \"Dec. Acc.\" \"Dec. Acc.\" \"Inc. Acc.\" \"Dec. Acc.\" \n```\n\n\n:::\n\n```{.r .cell-code}\ncols_an <- RColorBrewer::brewer.pal(n = length(unique(split_anno)), name = \"Set1\")\n\neh_11h <- make_EH(norm_mat = mat_ATAC$ATAC_11half, hm_name = \"AS-E11.5\", col_fill = \"#ffcccc\")\neh_15h <- make_EH(norm_mat = mat_ATAC$ATAC_15half, hm_name = \"AS-E15.5\", col_fill = \"#e6fff2\")\n\nrow_order_eh <- row_order(eh_11h)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: The heatmap has not been initialized. You might have different results\nif you repeatedly execute this function, e.g. when row_km/column_km was\nset. It is more suggested to do as `ht = draw(ht); row_order(ht)`.\n```\n\n\n:::\n\n```{.r .cell-code}\nanno_hm <- Heatmap(\n  mat = split_anno,\n  col = cols_an, \n  name = \"Annotation\",\n  show_row_names = FALSE, \n  show_column_names = FALSE, \n  width = unit(2, \"mm\"),\n  height = unit(8, \"cm\"),\n  row_order = row_order_eh,\n  row_title_gp = gpar(fontsize = 0)\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThere are 6 unique colors in the vector `col` and 6 unique values in\n`matrix`. `Heatmap()` will treat it as an exact discrete one-to-one\nmapping. If this is not what you want, slightly change the number of\ncolors, e.g. by adding one more color or removing a color.\n```\n\n\n:::\n\n```{.r .cell-code}\ndraw(anno_hm + eh_11h + eh_15h, split = split_anno, merge_legend = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: `legend_height` you specified is too small, use the default minimal\nheight.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: `legend_height` you specified is too small, use the default minimal\nheight.\nWarning: `legend_height` you specified is too small, use the default minimal\nheight.\nWarning: `legend_height` you specified is too small, use the default minimal\nheight.\nWarning: `legend_height` you specified is too small, use the default minimal\nheight.\nWarning: `legend_height` you specified is too small, use the default minimal\nheight.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](day2-2_atac_rna_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n### RNA\n\n::: {.cell}\n\n```{.r .cell-code}\nrna_hm <- Heatmap(matrix = mat_RNA, \n        name = \"RNA\", \n        cluster_columns = FALSE, \n        cluster_rows = FALSE,\n        na_col = \"grey\",\n        row_order = row_order_eh,\n        show_row_names = FALSE, \n        show_column_names = FALSE,\n        row_title_rot = 0,\n        top_annotation = HeatmapAnnotation(\n          df = colData(rna)[,2,drop = FALSE], \n          annotation_name_gp = gpar(fontsize = 0)\n        ),\n        width = unit(2, \"cm\"),\n        height = unit(8, \"cm\"),\n        heatmap_legend_param = list(\n          legend_height = unit(0.5, \"cm\"),\n          legend_width = unit(0.1, \"cm\"),\n          at = c(-10,0,10), \n          title = \"RNA\",\n          title_gp = gpar(fontsize = 8),\n          labels_gp = gpar(fontsize = 7)\n        )\n)\n\ndraw(rna_hm, split = split_anno, merge_legend = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: `legend_height` you specified is too small, use the default minimal\nheight.\nWarning: `legend_height` you specified is too small, use the default minimal\nheight.\nWarning: `legend_height` you specified is too small, use the default minimal\nheight.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](day2-2_atac_rna_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n### Combine plots\n\n::: {.cell}\n\n```{.r .cell-code}\ndraw(anno_hm + eh_11h + eh_15h + rna_hm, split = split_anno, merge_legend = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: `legend_height` you specified is too small, use the default minimal\nheight.\nWarning: `legend_height` you specified is too small, use the default minimal\nheight.\nWarning: `legend_height` you specified is too small, use the default minimal\nheight.\nWarning: `legend_height` you specified is too small, use the default minimal\nheight.\nWarning: `legend_height` you specified is too small, use the default minimal\nheight.\nWarning: `legend_height` you specified is too small, use the default minimal\nheight.\nWarning: `legend_height` you specified is too small, use the default minimal\nheight.\nWarning: `legend_height` you specified is too small, use the default minimal\nheight.\nWarning: `legend_height` you specified is too small, use the default minimal\nheight.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](day2-2_atac_rna_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n## Question\n**Can you change order of the regions?**\n1. Active\n2. Repressed\n3. Silent\n4. Incongruent\n5. Dec. Acc.\n6. Inc. Acc.\n\n_**Hint:**_ You would have to change the factor levels of `split_anno`.\n\n:::{.callout-tip collapse=\"true\"}\n\n### Answer\n\nWe have to re-make the annotation heatmap. `draw` function takes order from first object.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(split_anno)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Active\"      \"Inc. Acc.\"   \"Dec. Acc.\"   \"Incongruent\" \"Silent\"     \n[6] \"Repressed\"  \n```\n\n\n:::\n\n```{.r .cell-code}\nsplit_anno <- factor(split_anno, levels = unique(split_anno)[c(1,6,5,4,2,3)])\n\nanno_hm <- Heatmap(\n  mat = split_anno,\n  col = cols_an, \n  name = \"Annotation\",\n  show_row_names = FALSE, \n  show_column_names = FALSE, \n  width = unit(2, \"mm\"),\n  height = unit(8, \"cm\"),\n  row_order = row_order_eh,\n  row_title_gp = gpar(fontsize = 0)\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThere are 6 unique colors in the vector `col` and 6 unique values in\n`matrix`. `Heatmap()` will treat it as an exact discrete one-to-one\nmapping. If this is not what you want, slightly change the number of\ncolors, e.g. by adding one more color or removing a color.\n```\n\n\n:::\n\n```{.r .cell-code}\ndraw(anno_hm + eh_11h + eh_15h + rna_hm, split = split_anno, merge_legend = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: `legend_height` you specified is too small, use the default minimal\nheight.\nWarning: `legend_height` you specified is too small, use the default minimal\nheight.\nWarning: `legend_height` you specified is too small, use the default minimal\nheight.\nWarning: `legend_height` you specified is too small, use the default minimal\nheight.\nWarning: `legend_height` you specified is too small, use the default minimal\nheight.\nWarning: `legend_height` you specified is too small, use the default minimal\nheight.\nWarning: `legend_height` you specified is too small, use the default minimal\nheight.\nWarning: `legend_height` you specified is too small, use the default minimal\nheight.\nWarning: `legend_height` you specified is too small, use the default minimal\nheight.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](day2-2_atac_rna_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n:::\n\n:::{.callout-important}\nTo make the plots a bit prettier, you can run these codes before making the plot. You only need to run these once while you are in an `R` session, not before making every plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nht_opt$TITLE_PADDING <- unit(1, \"mm\")\nht_opt$legend_gap <- unit(3, \"mm\")\nht_opt$legend_grid_height <- unit(2, \"mm\")\nht_opt$legend_grid_width <- unit(2, \"mm\")\nht_opt$HEATMAP_LEGEND_PADDING <- unit(1, \"mm\")\nht_opt$heatmap_border <- TRUE\n```\n:::\n\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}