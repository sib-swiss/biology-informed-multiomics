[
  {
    "objectID": "precourse_preparations.html",
    "href": "precourse_preparations.html",
    "title": "Precourse preparations",
    "section": "",
    "text": "You should meet the learning outcomes of First Steps with R in Life Sciences.\nThis course is designed for beginners in multi-omics analysis, thus no requirement for prior experience in multi-omics analysis is needed. A basic understanding of R programming and fundamental biological concepts related to gene expression and epigenetics is highly recommended. Please evaluate your R skills here."
  },
  {
    "objectID": "precourse_preparations.html#required-competences",
    "href": "precourse_preparations.html#required-competences",
    "title": "Precourse preparations",
    "section": "",
    "text": "You should meet the learning outcomes of First Steps with R in Life Sciences.\nThis course is designed for beginners in multi-omics analysis, thus no requirement for prior experience in multi-omics analysis is needed. A basic understanding of R programming and fundamental biological concepts related to gene expression and epigenetics is highly recommended. Please evaluate your R skills here."
  },
  {
    "objectID": "precourse_preparations.html#software",
    "href": "precourse_preparations.html#software",
    "title": "Precourse preparations",
    "section": "Software",
    "text": "Software\nAttendees should have a Wi-Fi enabled computer. An online R and RStudio environment will be provided. In order to access that environment your computer needs to be able to access http websites (not https). You can check this by browsing to http://www.httpforever.com. However, in case you wish to perform the practical exercises on your own computer, please take a moment to install the following before the course:\n\nR version &gt; 4.2.\nLatest RStudio version, the free version is perfectly fine.\nThe R packages necessary for the course. Find the renv to install them here."
  },
  {
    "objectID": "exercises/exercise4.html",
    "href": "exercises/exercise4.html",
    "title": "Project 4",
    "section": "",
    "text": "Project 4 focuses on understanding the mechanisms of immune remodeling in cervical cancer (CC) and identifying potential therapeutic targets; paper1, paper2. Cervical cancer progression involves complex interactions between immune cells and tumor cells, leading to an immunosuppressive microenvironment. To investigate these interactions, this study utilizes scRNA-seq data from normal cervix, high-grade squamous intraepithelial lesions (HSIL), and cervical cancer tissues to analyze transcriptional responses in immune cells.\nUnsupervised clustering of transcriptional profiles revealed distinct immune cell populations and their interactions with tumor cells. Differences in immune cell states were linked to the progression of cervical cancer and the establishment of an immunosuppressive microenvironment. Specifically, the study identified unique HPV-related epithelial clusters and critical node genes that regulate disease progression. The transition from normal cervix to HSIL and cervical cancer was marked by changes in immune cell populations, including T cells, dendritic cells, and macrophages.\nFurther analysis identified key immune cell subsets and their roles in shaping the tumor microenvironment. Network analyses demonstrated that immune cell interactions influence functional T cell programs and systemic immune coordination. This study provides insights into how immune remodeling impacts cervical cancer progression and highlights transcriptional markers that could be used to predict patient outcomes and guide therapeutic strategies."
  },
  {
    "objectID": "exercises/exercise4.html#available-data",
    "href": "exercises/exercise4.html#available-data",
    "title": "Project 4",
    "section": "Available data",
    "text": "Available data\nThese samples represent different stages and conditions of cervical tissues, providing a comprehensive dataset for analyzing the progression from normal cervix to cervical cancer.\n\nNormal Cervix without HPV (NO_HPV):\n\n\nN_HPV_NEG_1\nN_HPV_NEG_2\n\n\nNormal Cervix with HPV (N_HPV):\n\n\nN_1\nN_2\n\n\nHigh-Grade Squamous Intraepithelial Lesions with HPV (HSIL_HPV):\n\n\nHSIL_1\nHSIL_2\n\n\nCervical Cancer with HPV (CA_HPV):\n\n\nSCC_4\nSCC_5\nADC_6\n\nData has been downloaded and prepared for you from GEO GSE208653.\nIn order to download the data, run:\n\nwget https://single-cell-transcriptomics.s3.eu-central-1.amazonaws.com/projects/data/project4.tar.gz\ntar -xzvf project4.tar.gz\n\nAfter extracting, a directory project4 appears with the following content:\n.\n├── data\n│   ├── ADC_6\n│   │   ├── barcodes.tsv.gz\n│   │   ├── features.tsv.gz\n│   │   └── matrix.mtx.gz\n│   ├── HSIL_1\n│   │   ├── barcodes.tsv.gz\n│   │   ├── features.tsv.gz\n│   │   └── matrix.mtx.gz\n│   ├── HSIL_2\n│   │   ├── barcodes.tsv.gz\n│   │   ├── features.tsv.gz\n│   │   └── matrix.mtx.gz\n│   ├── N_1\n│   │   ├── barcodes.tsv.gz\n│   │   ├── features.tsv.gz\n│   │   └── matrix.mtx.gz\n│   ├── N_2\n│   │   ├── barcodes.tsv.gz\n│   │   ├── features.tsv.gz\n│   │   └── matrix.mtx.gz\n│   ├── N_HPV_NEG_1\n│   │   ├── barcodes.tsv.gz\n│   │   ├── features.tsv.gz\n│   │   └── matrix.mtx.gz\n│   ├── N_HPV_NEG_2\n│   │   ├── barcodes.tsv.gz\n│   │   ├── features.tsv.gz\n│   │   └── matrix.mtx.gz\n│   ├── SCC_4\n│   │   ├── barcodes.tsv.gz\n│   │   ├── features.tsv.gz\n│   │   └── matrix.mtx.gz\n│   └── SCC_5\n│       ├── barcodes.tsv.gz\n│       ├── features.tsv.gz\n│       └── matrix.mtx.gz\n├── paper1.pdf\n└── paper2.pdf\n\n10 directories, 29 files\nNow create a new project in the project1 directory (Project (None) &gt; New Project …), and create Seurat object from the count matrices:\n\n\n\n\n\n\nProject exercise\n\n\n\nwith this dataset, go through the steps we have performed during the course, and try to reproduce the results provided in the paper. Pay specific attention to quality control, clustering and annotation."
  },
  {
    "objectID": "exercises/exercise4.html#tips",
    "href": "exercises/exercise4.html#tips",
    "title": "Project 4",
    "section": "Tips",
    "text": "Tips\n\nFor mitochondrial genes, ribosomol genes and hemoglobin genes you can use the following patterns: \"^MT-\", \"^RP[SL]\" and \"^HB[^(P)]\".\nWork iterative; meaning that based on results of an analyis, adjust the previous analysis. For example, if clustering is not according to cell types, try to adjust the number of components or the resolution.\nPlease read the methods section of the paper.\nIf the code for data analysis is available, try to adapt it (for specific parameters).\nCheck the supplementary figures.\nTry to understand if they used some other tools for the data analysis."
  },
  {
    "objectID": "exercises/exercise2.html",
    "href": "exercises/exercise2.html",
    "title": "Project 2",
    "section": "",
    "text": "Project 2 focuses on a single-cell sequencing study of the Drosophila brain following acute cocaine exposure; paper. Flies were exposed to cocaine, which impaired locomotor activity and increased the incidence of seizures and compulsive grooming. To investigate the specific cell populations responding to cocaine, single-cell transcriptional responses were analyzed in duplicate samples of flies that consumed sucrose or sucrose supplemented with cocaine. The study utilized the 10x Genomics Chromium platform for single-cell RNA sequencing.\nUnsupervised clustering of transcriptional profiles from 86,224 cells revealed 36 distinct clusters, representing all major cell types (neuronal and glial) and neurotransmitter types from most brain regions. Differential expression analysis within individual clusters indicated cluster-specific responses to cocaine, with Kenyon cells of the mushroom bodies and glia showing particularly large transcriptional changes. The study highlighted profound sexual dimorphism in brain transcriptional responses to cocaine, with males exhibiting more pronounced changes than females.\nCluster-specific coexpression networks and global interaction networks revealed diverse cellular processes affected by acute cocaine exposure, providing an atlas of sexually dimorphic cocaine-modulated gene expression in the Drosophila brain."
  },
  {
    "objectID": "exercises/exercise2.html#available-data",
    "href": "exercises/exercise2.html#available-data",
    "title": "Project 2",
    "section": "Available data",
    "text": "Available data\nData has been downloaded and prepared for you from GEO GSE152495.\nIn order to download the data, run:\n\nwget https://single-cell-transcriptomics.s3.eu-central-1.amazonaws.com/projects/data/project2.tar.gz\ntar -xzvf project2.tar.gz\n\nAfter extracting, a directory project2 appears with the following format:\n.\n├── data\n│   ├── Female_Cocaine_1\n│   │   ├── barcodes.tsv.gz\n│   │   ├── features.tsv.gz\n│   │   └── matrix.mtx.gz\n│   ├── Female_Cocaine_2\n│   │   ├── barcodes.tsv.gz\n│   │   ├── features.tsv.gz\n│   │   └── matrix.mtx.gz\n│   ├── Female_Sucrose_1\n│   │   ├── barcodes.tsv.gz\n│   │   ├── features.tsv.gz\n│   │   └── matrix.mtx.gz\n│   ├── Female_Sucrose_2\n│   │   ├── barcodes.tsv.gz\n│   │   ├── features.tsv.gz\n│   │   └── matrix.mtx.gz\n│   ├── Male_Cocaine_1\n│   │   ├── barcodes.tsv.gz\n│   │   ├── features.tsv.gz\n│   │   └── matrix.mtx.gz\n│   ├── Male_Cocaine_2\n│   │   ├── barcodes.tsv.gz\n│   │   ├── features.tsv.gz\n│   │   └── matrix.mtx.gz\n│   ├── Male_Sucrose_1\n│   │   ├── barcodes.tsv.gz\n│   │   ├── features.tsv.gz\n│   │   └── matrix.mtx.gz\n│   └── Male_Sucrose_2\n│       ├── barcodes.tsv.gz\n│       ├── features.tsv.gz\n│       └── matrix.mtx.gz\n└── paper.pdf\n\n9 directories, 25 files\nShowing us that we have two replicates per treatment, and two treatments:\n\nMale_Sucrose: controls\nFemale_Sucrose: controls\nMale_Cocaine: treatments\nFemale_Cocaine: treatments\n\nNow create a new project in the project2 directory (Project (None) &gt; New Project …), and create Seurat object from the count matrices:\n\n\n\n\n\n\nProject exercise\n\n\n\nWith this dataset, go through the steps we have performed during the course, and try to reproduce the results provided in the paper. Pay specific attention to quality control, clustering and annotation."
  },
  {
    "objectID": "exercises/exercise2.html#tips",
    "href": "exercises/exercise2.html#tips",
    "title": "Project 2",
    "section": "Tips",
    "text": "Tips\n\nFor mitochondrial genes and ribosomol genes you can use the following patterns: \"^mt:\" and \"^Rp[SL]\".\nWork iterative; meaning that based on results of an analyis, adjust the previous analysis. For example, if clustering is not according to cell types, try to adjust the number of components or the resolution.\nPlease read the methods section of the paper.\nIf the code for data analysis is available, try to adapt it (for specific parameters).\nCheck the supplementary figures.\nTry to understand if they used some other tools for the data analysis."
  },
  {
    "objectID": "day2/day3-1_cell_annotation.html",
    "href": "day2/day3-1_cell_annotation.html",
    "title": "Cell annotation",
    "section": "",
    "text": "Review on automated cell annotation"
  },
  {
    "objectID": "day2/day3-1_cell_annotation.html#material",
    "href": "day2/day3-1_cell_annotation.html#material",
    "title": "Cell annotation",
    "section": "",
    "text": "Review on automated cell annotation"
  },
  {
    "objectID": "day2/day2-1_normalization_scaling.html",
    "href": "day2/day2-1_normalization_scaling.html",
    "title": "Normalization and scaling",
    "section": "",
    "text": "Learning outcomes\n\n\n\nAfter having completed this chapter you will be able to:\n\nDescribe and perform standard procedures for normalization and scaling with the package Seurat\nSelect the most variable genes from a Seurat object for downstream analyses"
  },
  {
    "objectID": "day2/day2-1_normalization_scaling.html#material",
    "href": "day2/day2-1_normalization_scaling.html#material",
    "title": "Normalization and scaling",
    "section": "Material",
    "text": "Material"
  },
  {
    "objectID": "day2/day2-1_normalization_scaling.html#material-1",
    "href": "day2/day2-1_normalization_scaling.html#material-1",
    "title": "Normalization and scaling",
    "section": "Material",
    "text": "Material\n\n\nSeurat vignette"
  },
  {
    "objectID": "day1/day1-2_atac.html",
    "href": "day1/day1-2_atac.html",
    "title": "Exercise 2",
    "section": "",
    "text": "By the end of this section, you will be able to:\nDistinguish between when to use Heatmap() and HeatmapAnnotation()\nGenerate row split annotations for enriched heatmaps\nAdd multiple categorical annotations with separate color legends\nAvoid common data handling errors in heatmap plotting\n\n\n\n\n\nlibrary(SummarizedExperiment)\nlibrary(EnrichedHeatmap)\nlibrary(gUtils)\nlibrary(rtracklayer)\nlibrary(circlize)\n\n\n\n\nHere we load the SummarizedExperiment for the ATAC-seq data\n\natac &lt;- readRDS(\"data/atac_se.rds\")\n\n\n\n\nEach peak region represent the activity in a genomic region. These peaks are annotated for various features, including their genomic annotations and the results for differential accessibility analysis is also added there.\n\nrowRanges(atac)\n\nGRanges object with 3656 ranges and 18 metadata columns:\n         seqnames              ranges strand |             annotation   geneChr\n            &lt;Rle&gt;           &lt;IRanges&gt;  &lt;Rle&gt; |            &lt;character&gt; &lt;integer&gt;\n     [1]     chr1     3670547-3672665      * |       Promoter (&lt;=1kb)         1\n     [2]     chr1     4332510-4332710      * | Intron (ENSMUST00000..         1\n     [3]     chr1     4491755-4492573      * |       Promoter (1-2kb)         1\n     [4]     chr1     4571186-4572423      * |      Distal Intergenic         1\n     [5]     chr1     4785062-4786325      * |       Promoter (&lt;=1kb)         1\n     ...      ...                 ...    ... .                    ...       ...\n  [3652]     chr2 181764664-181764891      * |       Promoter (1-2kb)         2\n  [3653]     chr2 181766881-181767875      * |       Promoter (&lt;=1kb)         2\n  [3654]     chr2 181837244-181838655      * |       Promoter (&lt;=1kb)         2\n  [3655]     chr2 181863853-181865066      * |       Promoter (&lt;=1kb)         2\n  [3656]     chr2 181918525-181918853      * |      Distal Intergenic         2\n         geneStart   geneEnd geneLength geneStrand      geneId\n         &lt;integer&gt; &lt;integer&gt;  &lt;integer&gt;  &lt;integer&gt; &lt;character&gt;\n     [1]   3214482   3671498     457017          2      497097\n     [2]   4344146   4360314      16169          2       19888\n     [3]   4492465   4493735       1271          2       20671\n     [4]   4491390   4497354       5965          2       20671\n     [5]   4773206   4785710      12505          2       27395\n     ...       ...       ...        ...        ...         ...\n  [3652] 181763332 181827797      64466          1       17932\n  [3653] 181767029 181795892      28864          1       17932\n  [3654] 181837854 181857461      19608          1      245867\n  [3655] 181864337 181870830       6494          1       67005\n  [3656] 181864360 181866209       1850          1       67005\n                  transcriptId distanceToTSS            ENSEMBL      SYMBOL\n                   &lt;character&gt;     &lt;numeric&gt;        &lt;character&gt; &lt;character&gt;\n     [1]  ENSMUST00000070533.4             0 ENSMUSG00000051951        Xkr4\n     [2]  ENSMUST00000027032.5         27604 ENSMUSG00000025900         Rp1\n     [3]  ENSMUST00000191939.1          1162 ENSMUSG00000025902       Sox17\n     [4]  ENSMUST00000192650.5        -73832 ENSMUSG00000025902       Sox17\n     [5]  ENSMUST00000130201.7             0 ENSMUSG00000033845      Mrpl15\n     ...                   ...           ...                ...         ...\n  [3652] ENSMUST00000081125.10          1332 ENSMUSG00000010505        Myt1\n  [3653]  ENSMUST00000156190.7             0 ENSMUSG00000010505        Myt1\n  [3654] ENSMUST00000029116.13             0 ENSMUSG00000027589      Pcmtd2\n  [3655]  ENSMUST00000039551.8             0 ENSMUSG00000038628      Polr3k\n  [3656]  ENSMUST00000153214.1         54165 ENSMUSG00000038628      Polr3k\n                       GENENAME        anno     logFC    logCPM         F\n                    &lt;character&gt; &lt;character&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt;\n     [1] X-linked Kx blood gr..    Promoter  0.602984  10.45378  41.78446\n     [2] retinitis pigmentosa..      Intron  0.855748   5.18424   3.68371\n     [3] SRY (sex determining..    Promoter -0.620926   7.13469   9.14522\n     [4] SRY (sex determining..  Intergenic -0.511046   8.90885  15.15688\n     [5] mitochondrial riboso..    Promoter  0.540908   8.63469  15.08892\n     ...                    ...         ...       ...       ...       ...\n  [3652] myelin transcription..    Promoter -1.275275   5.54135  10.44866\n  [3653] myelin transcription..    Promoter  0.477658   7.56969   6.03877\n  [3654] protein-L-isoasparta..    Promoter  0.689247   7.92175  16.67881\n  [3655] polymerase (RNA) III..    Promoter  0.241693   9.05746   4.06676\n  [3656] polymerase (RNA) III..  Intergenic  0.394577   6.84745   2.73331\n              PValue      qvalue\n           &lt;numeric&gt;   &lt;numeric&gt;\n     [1] 6.58453e-08 4.81983e-07\n     [2] 6.13517e-02 9.28785e-02\n     [3] 4.12368e-03 8.38540e-03\n     [4] 3.27158e-04 8.67115e-04\n     [5] 3.36058e-04 8.82634e-04\n     ...         ...         ...\n  [3652] 0.002309221  0.00497558\n  [3653] 0.017945118  0.03116850\n  [3654] 0.000181039  0.00051468\n  [3655] 0.049773014  0.07677364\n  [3656] 0.105289776  0.15077925\n  -------\n  seqinfo: 21 sequences from an unspecified genome; no seqlengths\n\nrd_atac &lt;- rowRanges(atac)\nrd_atac &lt;- rd_atac[abs(rd_atac$logFC) &gt;= 0.5 & rd_atac$qvalue &lt;= 0.1]\ncolnames(elementMetadata(rd_atac)) &lt;- paste(\"ATAC\", colnames(elementMetadata(rd_atac)), sep = \"_\")\n\n\n\n\nMost of the peaks are around 1000 bp wide. We can check that\n\nmedian(lengths(rowRanges(atac)))\n\n[1] 1031\n\n\nFor plotting the data, we can hence consider 1000 bp around the peak-mid\n\n# Finding mid of all peaks\nmid_peaks &lt;- gr.mid(rd_atac)\n\n# adding names to peaks to give them identity\nnames(mid_peaks) &lt;- paste(\"peak\", 1:length(mid_peaks), sep = \"_\")\n\n\n\n\nbigWig files are compressed, indexed, binary format used for efficiently displaying continuous data, like genomic signal data, in genome browsers. Here, we read in ATAC-seq bigWig files, filters the data to specific chromosomes, normalizes signal intensity around genomic regions of interest (peak centers), and saves the resulting matrices for downstream visualization.\n\natac_files &lt;- list.files(\"data\", pattern = \"ATAC\", full.names = TRUE)\nnames(atac_files) &lt;- gsub(pattern = \"\\\\.bw\", replacement = \"\", x = basename(atac_files))\natac_bw &lt;- lapply(atac_files, function(x){\n  a &lt;- rtracklayer::import(x)\n  a &lt;- a[seqnames(a) %in% c(\"chr1\", \"chr2\")]\n  a\n})\n\nbigWig files are represented as GRanges.\n\natac_bw\n\n$ATAC_11half\nGRanges object with 6354084 ranges and 1 metadata column:\n            seqnames              ranges strand |     score\n               &lt;Rle&gt;           &lt;IRanges&gt;  &lt;Rle&gt; | &lt;numeric&gt;\n        [1]     chr1           1-3000000      * | 0.0000000\n        [2]     chr1     3000001-3000050      * | 0.0225005\n        [3]     chr1     3000051-3000100      * | 0.0600013\n        [4]     chr1     3000101-3000150      * | 0.0337507\n        [5]     chr1     3000151-3000200      * | 0.0375008\n        ...      ...                 ...    ... .       ...\n  [6354080]     chr2 182013051-182013100      * |   45.3122\n  [6354081]     chr2 182013101-182013150      * |   49.6173\n  [6354082]     chr2 182013151-182013200      * |   79.4379\n  [6354083]     chr2 182013201-182013250      * |   50.2623\n  [6354084]     chr2 182013251-182113224      * |    0.0000\n  -------\n  seqinfo: 66 sequences from an unspecified genome\n\n$ATAC_15half\nGRanges object with 5356375 ranges and 1 metadata column:\n            seqnames              ranges strand |      score\n               &lt;Rle&gt;           &lt;IRanges&gt;  &lt;Rle&gt; |  &lt;numeric&gt;\n        [1]     chr1           1-3000400      * | 0.00000000\n        [2]     chr1     3000401-3000500      * | 0.00844927\n        [3]     chr1     3000501-3000550      * | 0.00000000\n        [4]     chr1     3000551-3000650      * | 0.00844927\n        [5]     chr1     3000651-3003300      * | 0.00000000\n        ...      ...                 ...    ... .        ...\n  [5356371]     chr2 182012501-182012600      * | 0.01689850\n  [5356372]     chr2 182012601-182012650      * | 0.00844927\n  [5356373]     chr2 182012651-182012900      * | 0.00000000\n  [5356374]     chr2 182012901-182013000      * | 0.01689850\n  [5356375]     chr2 182013001-182113224      * | 0.00000000\n  -------\n  seqinfo: 66 sequences from an unspecified genome\n\n\nNext, we calculate the normalized signals into the area of our interest. Please check ?normalizeToMatrix for details of this function\n\nmat_AS &lt;- lapply(atac_bw, FUN = function(x) {\n  normalizeToMatrix(x, mid_peaks,\n    extend = 1000,\n    value_column = \"score\",\n    include_target = TRUE,\n    mean_mode = \"w0\",\n    w = 20,\n    smooth = T,\n    background = 0\n  )\n})\n\nWarning: Width of `target` are all 1, `include_target` is set to `FALSE`.\nWarning: Width of `target` are all 1, `include_target` is set to `FALSE`.\n\nmat_AS\n\n$ATAC_11half\nNormalize x to mid_peaks:\n  Upstream 1000 bp (50 windows)\n  Downstream 1000 bp (50 windows)\n  Include target regions (width = 1)\n  1933 target regions\n\n$ATAC_15half\nNormalize x to mid_peaks:\n  Upstream 1000 bp (50 windows)\n  Downstream 1000 bp (50 windows)\n  Include target regions (width = 1)\n  1933 target regions\n\n\n\n\n\nEnriched heatmap is a special type of heatmap which visualizes the enrichment of genomic signals over specific target regions.\n\nEnrichedHeatmap(mat = mat_AS$ATAC_11half, name = \"E11.5\") + \n  EnrichedHeatmap(mat = mat_AS$ATAC_15half, name = \"E15.5\")\n\nThe automatically generated colors map from the 1^st and 99^th of the\nvalues in the matrix. There are outliers in the matrix whose patterns\nmight be hidden by this color mapping. You can manually set the color\nto `col` argument.\n\nUse `suppressMessages()` to turn off this message.\nThe automatically generated colors map from the 1^st and 99^th of the\nvalues in the matrix. There are outliers in the matrix whose patterns\nmight be hidden by this color mapping. You can manually set the color\nto `col` argument.\n\nUse `suppressMessages()` to turn off this message.\n\n\n\n\n\n\n\n\n\nJoining 2 EnrichedHeatmaps is very easy with a + sign.\n\n\n\nLet’s work on one data for now.\n\n\n\nEnrichedHeatmap(\n  mat = mat_AS$ATAC_11half,    # normalized matrix\n  name = \"E11.5\",              # Name for the plot\n  col = c(\"white\", \"red\"),     # We change the colors for low to high values\n  width = unit(4, \"cm\"),       # Width of the heatmap\n  height = unit(8, \"cm\")      # Height of the heatmap\n)\n\n\n\n\n\n\n\n\nYou may wonder why the color looks so light. The reason is in coverage values in ATAC, there exist some extreme values, which results in extreme value in normalizedMatrix.\n\n\n\n\n# Taking data between 1 and 99 percentile\ncol_fun &lt;- colorRamp2(quantile(mat_AS$ATAC_11half, c(0.01, 0.99)), c(\"white\", \"red\"))\n\nEnrichedHeatmap(\n  mat = mat_AS$ATAC_11half,\n  name = \"E11.5\",\n  col = col_fun,\n  width = unit(4, \"cm\"),\n  height = unit(8, \"cm\")\n)\n\n\n\n\n\n\n\n\n\n\n\n\n# We first change the color legent of the plot to show only 3 values\nvmin &lt;- as.numeric(quantile(mat_AS$ATAC_11half, c(0.01)))\nvmax &lt;- as.numeric(quantile(mat_AS$ATAC_11half, c(0.99)))\nvmid &lt;- (vmin + vmax) / 2\nlegend_ticks &lt;- c(vmin, vmid, vmax)\n\nEnrichedHeatmap(\n  mat = mat_AS$ATAC_11half,\n  name = \"E11.5\",\n  col = col_fun,\n  width = unit(4, \"cm\"),\n  height = unit(8, \"cm\"),\n  column_title = \"E11.5\",\n  column_title_gp = gpar(fontsize = 10, fill = \"#ffcccc\"),\n  axis_name = c(\"-1kb\", \"mid\", \"1kb\"),  # We changed the axis names here\n heatmap_legend_param = list(\n    at = legend_ticks,\n    labels = round(legend_ticks, digits = 1),\n    title_gp = gpar(fontsize = 8),\n    labels_gp = gpar(fontsize = 7)\n  ),\n  top_annotation = HeatmapAnnotation(\n    lines = anno_enriched(\n      height = unit(2, \"cm\"),\n      gp = gpar(\n        lwd = 0.7,\n        fontsize = 5\n      ),\n      axis_param = list(\n        side = \"right\",\n        facing = \"inside\",\n        gp = gpar(\n          fontsize = 7,\n          col = \"black\",\n          lwd = 0.4\n        )\n      )\n    )\n  )\n)\n\n\n\n\n\n\n\n\n\n\n\nAlthough we see some signal here, but it might be a good idea to split the heatmap into the regions which gained and lost accessibility.\n\nsplit_change &lt;- ifelse(mid_peaks$ATAC_logFC &gt; 0, yes = \"Increased accessibility\", no = \"Decreased accessibility\")\nnames(split_change) &lt;- names(mid_peaks)\n\nhead(split_change)\n\n                   peak_1                    peak_2                    peak_3 \n\"Increased accessibility\" \"Increased accessibility\" \"Decreased accessibility\" \n                   peak_4                    peak_5                    peak_6 \n\"Decreased accessibility\" \"Increased accessibility\" \"Decreased accessibility\" \n\n# Define cluster colors\ncluster_colors &lt;- c(\"Increased accessibility\" = \"red\", \"Decreased accessibility\" = \"blue\")\n\n# Make sure split_change has levels matching the color names\nsplit_change &lt;- factor(split_change, levels = names(cluster_colors))\n\nEnrichedHeatmap(\n  mat = mat_AS$ATAC_11half,\n  name = \"E11.5\",\n  row_split = split_change,\n  col = col_fun,\n  width = unit(4, \"cm\"),\n  height = unit(8, \"cm\"),\n  column_title = \"E11.5\",\n  column_title_gp = gpar(fontsize = 10, fill = \"#ffcccc\"),\n  axis_name = c(\"-1kb\", \"mid\", \"1kb\"),\n  heatmap_legend_param = list(\n    at = legend_ticks,\n    labels = round(legend_ticks, digits = 1),\n    title_gp = gpar(fontsize = 8),\n    labels_gp = gpar(fontsize = 7)\n  ),\n  top_annotation = HeatmapAnnotation(\n    lines = anno_enriched(\n      gp = gpar(col = cluster_colors),\n      height = unit(2, \"cm\"),\n      axis_param = list(\n        side = \"right\",\n        facing = \"inside\",\n        gp = gpar(\n          fontsize = 7,\n          lwd = 0.4\n        )\n      )\n    )\n  )\n)\n\n\n\n\n\n\n\n\n\n\n\nAs you know we have at least 2 samples as of now. It will be a good idea to create a function to make this heatmap.\n\nmake_EH &lt;- function(norm_mat, heatmap_cols = c(\"white\", \"red\"), split_rows = NULL, hm_name, col_fill = \"#ffcccc\"){\n  col_fun &lt;- colorRamp2(quantile(norm_mat, c(0.01, 0.99)), heatmap_cols)  \n  \n  vmin &lt;- as.numeric(quantile(norm_mat, c(0.01)))\n  vmax &lt;- as.numeric(quantile(norm_mat, c(0.99)))\n  vmid &lt;- (vmin + vmax) / 2\n  legend_ticks &lt;- c(vmin, vmid, vmax)\n\nEnrichedHeatmap(\n  mat = norm_mat,\n  name = hm_name,\n  row_split = split_rows,\n  col = col_fun,\n  width = unit(4, \"cm\"),\n  height = unit(8, \"cm\"),\n  column_title = hm_name,\n  column_title_gp = gpar(fontsize = 10, fill = col_fill),\n  axis_name = c(\"-1kb\", \"mid\", \"1kb\"),\n  heatmap_legend_param = list(\n    at = legend_ticks,\n    labels = round(legend_ticks, digits = 1),\n    title_gp = gpar(fontsize = 8),\n    labels_gp = gpar(fontsize = 7)\n  ),\n  top_annotation = HeatmapAnnotation(\n    lines = anno_enriched(\n      gp = gpar(col = cluster_colors),\n      height = unit(2, \"cm\"),\n      axis_param = list(\n        side = \"right\",\n        facing = \"inside\",\n        gp = gpar(\n          fontsize = 7,\n          lwd = 0.4\n        )\n      )\n    )\n  )\n)\n}\n\n\n\n\n\neh_11h &lt;- make_EH(norm_mat = mat_AS$ATAC_11half, split_rows = split_change, hm_name = \"E11.5\")\neh_15h &lt;- make_EH(norm_mat = mat_AS$ATAC_15half, split_rows = split_change, hm_name = \"E15.5\", col_fill = \"#e6fff2\")\n\ndraw(eh_11h + eh_15h, merge_legend = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\nIt is probably a good idea to represent clusters with colors, instead of text\n\neh_11h &lt;- make_EH(norm_mat = mat_AS$ATAC_11half, hm_name = \"E11.5\")\neh_15h &lt;- make_EH(norm_mat = mat_AS$ATAC_15half, hm_name = \"E15.5\", col_fill = \"#e6fff2\")\n\nrow_order_eh &lt;- row_order(eh_11h)\n\nWarning: The heatmap has not been initialized. You might have different results\nif you repeatedly execute this function, e.g. when row_km/column_km was\nset. It is more suggested to do as `ht = draw(ht); row_order(ht)`.\n\nanno_hm &lt;- Heatmap(\n  split_change,\n  col = c(\"red\", \"blue\"), \n  name = \"Change\",\n  show_row_names = FALSE, \n  show_column_names = FALSE, \n  width = unit(3, \"mm\"),\n  height = unit(8, \"cm\"),\n  row_order = row_order_eh,\n  row_title_gp = gpar(fontsize = 0)\n)\n\ndraw(anno_hm + eh_11h + eh_15h, split = split_change, merge_legend = TRUE)\n\n\n\n\n\n\n\n\n\n\n\nCan you make split the Enriched Heatmap based on the annotations?\nHint: mid_peaks$ATAC_anno contain annotations for the regions.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nsplit_anno &lt;- mid_peaks$ATAC_anno\nnames(split_anno) &lt;- names(mid_peaks)\n\nhead(split_anno)\n\n      peak_1       peak_2       peak_3       peak_4       peak_5       peak_6 \n  \"Promoter\"     \"Intron\"   \"Promoter\" \"Intergenic\"   \"Promoter\" \"Intergenic\" \n\ncols_an &lt;- RColorBrewer::brewer.pal(n = length(unique(split_anno)), name = \"Set1\")\n\nanno_an &lt;- Heatmap(\n  split_anno,\n  col = cols_an, \n  name = \"anno\",\n  show_row_names = FALSE, \n  show_column_names = FALSE, \n  width = unit(3, \"mm\"),\n  height = unit(8, \"cm\"),\n  row_order = row_order_eh,\n  row_title_gp = gpar(fontsize = 0)\n)\n\ndraw(anno_an + eh_11h + eh_15h, split = split_anno, merge_legend = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCan you make split the Enriched Heatmap based on the annotations and change in direction?\nHint: mid_peaks$ATAC_anno contain annotations for the regions. mid_peaks$ATAC_logFC contain sign of change.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nsplit_anno_dir &lt;- paste(mid_peaks$ATAC_anno, ifelse(mid_peaks$ATAC_logFC &gt; 0, yes = \"Inc\", no = \"Dec\"))\nnames(split_anno_dir) &lt;- names(mid_peaks)\n\nhead(split_anno_dir)\n\n          peak_1           peak_2           peak_3           peak_4 \n  \"Promoter Inc\"     \"Intron Inc\"   \"Promoter Dec\" \"Intergenic Dec\" \n          peak_5           peak_6 \n  \"Promoter Inc\" \"Intergenic Dec\" \n\ncols_an &lt;- RColorBrewer::brewer.pal(n = length(unique(split_anno_dir)), name = \"Paired\")\n\nanno_an_dir &lt;- Heatmap(\n  split_anno_dir,\n  col = cols_an, \n  name = \"anno\",\n  show_row_names = FALSE, \n  show_column_names = FALSE, \n  width = unit(3, \"mm\"),\n  height = unit(8, \"cm\"),\n  row_order = row_order_eh,\n  row_title_gp = gpar(fontsize = 0)\n)\n\nThere are 10 unique colors in the vector `col` and 10 unique values in\n`matrix`. `Heatmap()` will treat it as an exact discrete one-to-one\nmapping. If this is not what you want, slightly change the number of\ncolors, e.g. by adding one more color or removing a color.\n\ndraw(anno_an_dir + eh_11h + eh_15h, split = split_anno_dir, merge_legend = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCan you make split the Enriched Heatmap based on the annotations and change in direction with separate color bars for annotation and direction of change?\nHint: mid_peaks$ATAC_anno contain annotations for the regions. mid_peaks$ATAC_logFC contain sign of change.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nsplit_anno_df &lt;- data.frame(\n  Annotation = mid_peaks$ATAC_anno,\n  Direction = ifelse(mid_peaks$ATAC_logFC &gt; 0, yes = \"Inc\", no = \"Dec\")\n)\n\nhead(split_anno_df)\n\n  Annotation Direction\n1   Promoter       Inc\n2     Intron       Inc\n3   Promoter       Dec\n4 Intergenic       Dec\n5   Promoter       Inc\n6 Intergenic       Dec\n\ncols_an &lt;- c(\"red\", \"blue\", \n             RColorBrewer::brewer.pal(n = length(unique(split_anno_df$Annotation)), name = \"Set1\")\n)\n\nnames(cols_an) &lt;- c(unique(split_anno_df$Direction), unique(split_anno_df$Annotation))\n\nanno_an_df &lt;- Heatmap(\n  split_anno_df,\n  name = \"anno\",\n  col = cols_an,\n  show_row_names = FALSE, \n  show_column_names = FALSE, \n  width = unit(3, \"mm\"),\n  height = unit(8, \"cm\"),\n  row_order = row_order_eh,\n  row_title_gp = gpar(fontsize = 0)\n)\n\nWarning: The input is a data frame-like object, convert it to a matrix.\n\n\nWarning: Note: not all columns in the data frame are numeric. The data frame\nwill be converted into a character matrix.\n\ndraw(anno_an_df + eh_11h + eh_15h, split = split_anno_dir, merge_legend = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nHeatmap and EnrichedHeatmap serve different functions, however the plots can be combined effortlessly. This makes the visualization of complex data easy"
  },
  {
    "objectID": "day1/day1-2_atac.html#learning-objectives",
    "href": "day1/day1-2_atac.html#learning-objectives",
    "title": "Exercise 2",
    "section": "",
    "text": "By the end of this section, you will be able to:\nDistinguish between when to use Heatmap() and HeatmapAnnotation()\nGenerate row split annotations for enriched heatmaps\nAdd multiple categorical annotations with separate color legends\nAvoid common data handling errors in heatmap plotting"
  },
  {
    "objectID": "day1/day1-2_atac.html#load-libraries",
    "href": "day1/day1-2_atac.html#load-libraries",
    "title": "Exercise 2",
    "section": "",
    "text": "library(SummarizedExperiment)\nlibrary(EnrichedHeatmap)\nlibrary(gUtils)\nlibrary(rtracklayer)\nlibrary(circlize)"
  },
  {
    "objectID": "day1/day1-2_atac.html#atac-se-object",
    "href": "day1/day1-2_atac.html#atac-se-object",
    "title": "Exercise 2",
    "section": "",
    "text": "Here we load the SummarizedExperiment for the ATAC-seq data\n\natac &lt;- readRDS(\"data/atac_se.rds\")"
  },
  {
    "objectID": "day1/day1-2_atac.html#atac-peaks-info",
    "href": "day1/day1-2_atac.html#atac-peaks-info",
    "title": "Exercise 2",
    "section": "",
    "text": "Each peak region represent the activity in a genomic region. These peaks are annotated for various features, including their genomic annotations and the results for differential accessibility analysis is also added there.\n\nrowRanges(atac)\n\nGRanges object with 3656 ranges and 18 metadata columns:\n         seqnames              ranges strand |             annotation   geneChr\n            &lt;Rle&gt;           &lt;IRanges&gt;  &lt;Rle&gt; |            &lt;character&gt; &lt;integer&gt;\n     [1]     chr1     3670547-3672665      * |       Promoter (&lt;=1kb)         1\n     [2]     chr1     4332510-4332710      * | Intron (ENSMUST00000..         1\n     [3]     chr1     4491755-4492573      * |       Promoter (1-2kb)         1\n     [4]     chr1     4571186-4572423      * |      Distal Intergenic         1\n     [5]     chr1     4785062-4786325      * |       Promoter (&lt;=1kb)         1\n     ...      ...                 ...    ... .                    ...       ...\n  [3652]     chr2 181764664-181764891      * |       Promoter (1-2kb)         2\n  [3653]     chr2 181766881-181767875      * |       Promoter (&lt;=1kb)         2\n  [3654]     chr2 181837244-181838655      * |       Promoter (&lt;=1kb)         2\n  [3655]     chr2 181863853-181865066      * |       Promoter (&lt;=1kb)         2\n  [3656]     chr2 181918525-181918853      * |      Distal Intergenic         2\n         geneStart   geneEnd geneLength geneStrand      geneId\n         &lt;integer&gt; &lt;integer&gt;  &lt;integer&gt;  &lt;integer&gt; &lt;character&gt;\n     [1]   3214482   3671498     457017          2      497097\n     [2]   4344146   4360314      16169          2       19888\n     [3]   4492465   4493735       1271          2       20671\n     [4]   4491390   4497354       5965          2       20671\n     [5]   4773206   4785710      12505          2       27395\n     ...       ...       ...        ...        ...         ...\n  [3652] 181763332 181827797      64466          1       17932\n  [3653] 181767029 181795892      28864          1       17932\n  [3654] 181837854 181857461      19608          1      245867\n  [3655] 181864337 181870830       6494          1       67005\n  [3656] 181864360 181866209       1850          1       67005\n                  transcriptId distanceToTSS            ENSEMBL      SYMBOL\n                   &lt;character&gt;     &lt;numeric&gt;        &lt;character&gt; &lt;character&gt;\n     [1]  ENSMUST00000070533.4             0 ENSMUSG00000051951        Xkr4\n     [2]  ENSMUST00000027032.5         27604 ENSMUSG00000025900         Rp1\n     [3]  ENSMUST00000191939.1          1162 ENSMUSG00000025902       Sox17\n     [4]  ENSMUST00000192650.5        -73832 ENSMUSG00000025902       Sox17\n     [5]  ENSMUST00000130201.7             0 ENSMUSG00000033845      Mrpl15\n     ...                   ...           ...                ...         ...\n  [3652] ENSMUST00000081125.10          1332 ENSMUSG00000010505        Myt1\n  [3653]  ENSMUST00000156190.7             0 ENSMUSG00000010505        Myt1\n  [3654] ENSMUST00000029116.13             0 ENSMUSG00000027589      Pcmtd2\n  [3655]  ENSMUST00000039551.8             0 ENSMUSG00000038628      Polr3k\n  [3656]  ENSMUST00000153214.1         54165 ENSMUSG00000038628      Polr3k\n                       GENENAME        anno     logFC    logCPM         F\n                    &lt;character&gt; &lt;character&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt;\n     [1] X-linked Kx blood gr..    Promoter  0.602984  10.45378  41.78446\n     [2] retinitis pigmentosa..      Intron  0.855748   5.18424   3.68371\n     [3] SRY (sex determining..    Promoter -0.620926   7.13469   9.14522\n     [4] SRY (sex determining..  Intergenic -0.511046   8.90885  15.15688\n     [5] mitochondrial riboso..    Promoter  0.540908   8.63469  15.08892\n     ...                    ...         ...       ...       ...       ...\n  [3652] myelin transcription..    Promoter -1.275275   5.54135  10.44866\n  [3653] myelin transcription..    Promoter  0.477658   7.56969   6.03877\n  [3654] protein-L-isoasparta..    Promoter  0.689247   7.92175  16.67881\n  [3655] polymerase (RNA) III..    Promoter  0.241693   9.05746   4.06676\n  [3656] polymerase (RNA) III..  Intergenic  0.394577   6.84745   2.73331\n              PValue      qvalue\n           &lt;numeric&gt;   &lt;numeric&gt;\n     [1] 6.58453e-08 4.81983e-07\n     [2] 6.13517e-02 9.28785e-02\n     [3] 4.12368e-03 8.38540e-03\n     [4] 3.27158e-04 8.67115e-04\n     [5] 3.36058e-04 8.82634e-04\n     ...         ...         ...\n  [3652] 0.002309221  0.00497558\n  [3653] 0.017945118  0.03116850\n  [3654] 0.000181039  0.00051468\n  [3655] 0.049773014  0.07677364\n  [3656] 0.105289776  0.15077925\n  -------\n  seqinfo: 21 sequences from an unspecified genome; no seqlengths\n\nrd_atac &lt;- rowRanges(atac)\nrd_atac &lt;- rd_atac[abs(rd_atac$logFC) &gt;= 0.5 & rd_atac$qvalue &lt;= 0.1]\ncolnames(elementMetadata(rd_atac)) &lt;- paste(\"ATAC\", colnames(elementMetadata(rd_atac)), sep = \"_\")"
  },
  {
    "objectID": "day1/day1-2_atac.html#taking-1000-bp-around-the-mid-of-atac-peaks",
    "href": "day1/day1-2_atac.html#taking-1000-bp-around-the-mid-of-atac-peaks",
    "title": "Exercise 2",
    "section": "",
    "text": "Most of the peaks are around 1000 bp wide. We can check that\n\nmedian(lengths(rowRanges(atac)))\n\n[1] 1031\n\n\nFor plotting the data, we can hence consider 1000 bp around the peak-mid\n\n# Finding mid of all peaks\nmid_peaks &lt;- gr.mid(rd_atac)\n\n# adding names to peaks to give them identity\nnames(mid_peaks) &lt;- paste(\"peak\", 1:length(mid_peaks), sep = \"_\")"
  },
  {
    "objectID": "day1/day1-2_atac.html#normalizing-data-for-plotting",
    "href": "day1/day1-2_atac.html#normalizing-data-for-plotting",
    "title": "Exercise 2",
    "section": "",
    "text": "bigWig files are compressed, indexed, binary format used for efficiently displaying continuous data, like genomic signal data, in genome browsers. Here, we read in ATAC-seq bigWig files, filters the data to specific chromosomes, normalizes signal intensity around genomic regions of interest (peak centers), and saves the resulting matrices for downstream visualization.\n\natac_files &lt;- list.files(\"data\", pattern = \"ATAC\", full.names = TRUE)\nnames(atac_files) &lt;- gsub(pattern = \"\\\\.bw\", replacement = \"\", x = basename(atac_files))\natac_bw &lt;- lapply(atac_files, function(x){\n  a &lt;- rtracklayer::import(x)\n  a &lt;- a[seqnames(a) %in% c(\"chr1\", \"chr2\")]\n  a\n})\n\nbigWig files are represented as GRanges.\n\natac_bw\n\n$ATAC_11half\nGRanges object with 6354084 ranges and 1 metadata column:\n            seqnames              ranges strand |     score\n               &lt;Rle&gt;           &lt;IRanges&gt;  &lt;Rle&gt; | &lt;numeric&gt;\n        [1]     chr1           1-3000000      * | 0.0000000\n        [2]     chr1     3000001-3000050      * | 0.0225005\n        [3]     chr1     3000051-3000100      * | 0.0600013\n        [4]     chr1     3000101-3000150      * | 0.0337507\n        [5]     chr1     3000151-3000200      * | 0.0375008\n        ...      ...                 ...    ... .       ...\n  [6354080]     chr2 182013051-182013100      * |   45.3122\n  [6354081]     chr2 182013101-182013150      * |   49.6173\n  [6354082]     chr2 182013151-182013200      * |   79.4379\n  [6354083]     chr2 182013201-182013250      * |   50.2623\n  [6354084]     chr2 182013251-182113224      * |    0.0000\n  -------\n  seqinfo: 66 sequences from an unspecified genome\n\n$ATAC_15half\nGRanges object with 5356375 ranges and 1 metadata column:\n            seqnames              ranges strand |      score\n               &lt;Rle&gt;           &lt;IRanges&gt;  &lt;Rle&gt; |  &lt;numeric&gt;\n        [1]     chr1           1-3000400      * | 0.00000000\n        [2]     chr1     3000401-3000500      * | 0.00844927\n        [3]     chr1     3000501-3000550      * | 0.00000000\n        [4]     chr1     3000551-3000650      * | 0.00844927\n        [5]     chr1     3000651-3003300      * | 0.00000000\n        ...      ...                 ...    ... .        ...\n  [5356371]     chr2 182012501-182012600      * | 0.01689850\n  [5356372]     chr2 182012601-182012650      * | 0.00844927\n  [5356373]     chr2 182012651-182012900      * | 0.00000000\n  [5356374]     chr2 182012901-182013000      * | 0.01689850\n  [5356375]     chr2 182013001-182113224      * | 0.00000000\n  -------\n  seqinfo: 66 sequences from an unspecified genome\n\n\nNext, we calculate the normalized signals into the area of our interest. Please check ?normalizeToMatrix for details of this function\n\nmat_AS &lt;- lapply(atac_bw, FUN = function(x) {\n  normalizeToMatrix(x, mid_peaks,\n    extend = 1000,\n    value_column = \"score\",\n    include_target = TRUE,\n    mean_mode = \"w0\",\n    w = 20,\n    smooth = T,\n    background = 0\n  )\n})\n\nWarning: Width of `target` are all 1, `include_target` is set to `FALSE`.\nWarning: Width of `target` are all 1, `include_target` is set to `FALSE`.\n\nmat_AS\n\n$ATAC_11half\nNormalize x to mid_peaks:\n  Upstream 1000 bp (50 windows)\n  Downstream 1000 bp (50 windows)\n  Include target regions (width = 1)\n  1933 target regions\n\n$ATAC_15half\nNormalize x to mid_peaks:\n  Upstream 1000 bp (50 windows)\n  Downstream 1000 bp (50 windows)\n  Include target regions (width = 1)\n  1933 target regions"
  },
  {
    "objectID": "day1/day1-2_atac.html#enriched-heatmap",
    "href": "day1/day1-2_atac.html#enriched-heatmap",
    "title": "Exercise 2",
    "section": "",
    "text": "Enriched heatmap is a special type of heatmap which visualizes the enrichment of genomic signals over specific target regions.\n\nEnrichedHeatmap(mat = mat_AS$ATAC_11half, name = \"E11.5\") + \n  EnrichedHeatmap(mat = mat_AS$ATAC_15half, name = \"E15.5\")\n\nThe automatically generated colors map from the 1^st and 99^th of the\nvalues in the matrix. There are outliers in the matrix whose patterns\nmight be hidden by this color mapping. You can manually set the color\nto `col` argument.\n\nUse `suppressMessages()` to turn off this message.\nThe automatically generated colors map from the 1^st and 99^th of the\nvalues in the matrix. There are outliers in the matrix whose patterns\nmight be hidden by this color mapping. You can manually set the color\nto `col` argument.\n\nUse `suppressMessages()` to turn off this message.\n\n\n\n\n\n\n\n\n\nJoining 2 EnrichedHeatmaps is very easy with a + sign."
  },
  {
    "objectID": "day1/day1-2_atac.html#changing-aesthectics-of-enriched-heatmap",
    "href": "day1/day1-2_atac.html#changing-aesthectics-of-enriched-heatmap",
    "title": "Exercise 2",
    "section": "",
    "text": "Let’s work on one data for now.\n\n\n\nEnrichedHeatmap(\n  mat = mat_AS$ATAC_11half,    # normalized matrix\n  name = \"E11.5\",              # Name for the plot\n  col = c(\"white\", \"red\"),     # We change the colors for low to high values\n  width = unit(4, \"cm\"),       # Width of the heatmap\n  height = unit(8, \"cm\")      # Height of the heatmap\n)\n\n\n\n\n\n\n\n\nYou may wonder why the color looks so light. The reason is in coverage values in ATAC, there exist some extreme values, which results in extreme value in normalizedMatrix.\n\n\n\n\n# Taking data between 1 and 99 percentile\ncol_fun &lt;- colorRamp2(quantile(mat_AS$ATAC_11half, c(0.01, 0.99)), c(\"white\", \"red\"))\n\nEnrichedHeatmap(\n  mat = mat_AS$ATAC_11half,\n  name = \"E11.5\",\n  col = col_fun,\n  width = unit(4, \"cm\"),\n  height = unit(8, \"cm\")\n)\n\n\n\n\n\n\n\n\n\n\n\n\n# We first change the color legent of the plot to show only 3 values\nvmin &lt;- as.numeric(quantile(mat_AS$ATAC_11half, c(0.01)))\nvmax &lt;- as.numeric(quantile(mat_AS$ATAC_11half, c(0.99)))\nvmid &lt;- (vmin + vmax) / 2\nlegend_ticks &lt;- c(vmin, vmid, vmax)\n\nEnrichedHeatmap(\n  mat = mat_AS$ATAC_11half,\n  name = \"E11.5\",\n  col = col_fun,\n  width = unit(4, \"cm\"),\n  height = unit(8, \"cm\"),\n  column_title = \"E11.5\",\n  column_title_gp = gpar(fontsize = 10, fill = \"#ffcccc\"),\n  axis_name = c(\"-1kb\", \"mid\", \"1kb\"),  # We changed the axis names here\n heatmap_legend_param = list(\n    at = legend_ticks,\n    labels = round(legend_ticks, digits = 1),\n    title_gp = gpar(fontsize = 8),\n    labels_gp = gpar(fontsize = 7)\n  ),\n  top_annotation = HeatmapAnnotation(\n    lines = anno_enriched(\n      height = unit(2, \"cm\"),\n      gp = gpar(\n        lwd = 0.7,\n        fontsize = 5\n      ),\n      axis_param = list(\n        side = \"right\",\n        facing = \"inside\",\n        gp = gpar(\n          fontsize = 7,\n          col = \"black\",\n          lwd = 0.4\n        )\n      )\n    )\n  )\n)\n\n\n\n\n\n\n\n\n\n\n\nAlthough we see some signal here, but it might be a good idea to split the heatmap into the regions which gained and lost accessibility.\n\nsplit_change &lt;- ifelse(mid_peaks$ATAC_logFC &gt; 0, yes = \"Increased accessibility\", no = \"Decreased accessibility\")\nnames(split_change) &lt;- names(mid_peaks)\n\nhead(split_change)\n\n                   peak_1                    peak_2                    peak_3 \n\"Increased accessibility\" \"Increased accessibility\" \"Decreased accessibility\" \n                   peak_4                    peak_5                    peak_6 \n\"Decreased accessibility\" \"Increased accessibility\" \"Decreased accessibility\" \n\n# Define cluster colors\ncluster_colors &lt;- c(\"Increased accessibility\" = \"red\", \"Decreased accessibility\" = \"blue\")\n\n# Make sure split_change has levels matching the color names\nsplit_change &lt;- factor(split_change, levels = names(cluster_colors))\n\nEnrichedHeatmap(\n  mat = mat_AS$ATAC_11half,\n  name = \"E11.5\",\n  row_split = split_change,\n  col = col_fun,\n  width = unit(4, \"cm\"),\n  height = unit(8, \"cm\"),\n  column_title = \"E11.5\",\n  column_title_gp = gpar(fontsize = 10, fill = \"#ffcccc\"),\n  axis_name = c(\"-1kb\", \"mid\", \"1kb\"),\n  heatmap_legend_param = list(\n    at = legend_ticks,\n    labels = round(legend_ticks, digits = 1),\n    title_gp = gpar(fontsize = 8),\n    labels_gp = gpar(fontsize = 7)\n  ),\n  top_annotation = HeatmapAnnotation(\n    lines = anno_enriched(\n      gp = gpar(col = cluster_colors),\n      height = unit(2, \"cm\"),\n      axis_param = list(\n        side = \"right\",\n        facing = \"inside\",\n        gp = gpar(\n          fontsize = 7,\n          lwd = 0.4\n        )\n      )\n    )\n  )\n)\n\n\n\n\n\n\n\n\n\n\n\nAs you know we have at least 2 samples as of now. It will be a good idea to create a function to make this heatmap.\n\nmake_EH &lt;- function(norm_mat, heatmap_cols = c(\"white\", \"red\"), split_rows = NULL, hm_name, col_fill = \"#ffcccc\"){\n  col_fun &lt;- colorRamp2(quantile(norm_mat, c(0.01, 0.99)), heatmap_cols)  \n  \n  vmin &lt;- as.numeric(quantile(norm_mat, c(0.01)))\n  vmax &lt;- as.numeric(quantile(norm_mat, c(0.99)))\n  vmid &lt;- (vmin + vmax) / 2\n  legend_ticks &lt;- c(vmin, vmid, vmax)\n\nEnrichedHeatmap(\n  mat = norm_mat,\n  name = hm_name,\n  row_split = split_rows,\n  col = col_fun,\n  width = unit(4, \"cm\"),\n  height = unit(8, \"cm\"),\n  column_title = hm_name,\n  column_title_gp = gpar(fontsize = 10, fill = col_fill),\n  axis_name = c(\"-1kb\", \"mid\", \"1kb\"),\n  heatmap_legend_param = list(\n    at = legend_ticks,\n    labels = round(legend_ticks, digits = 1),\n    title_gp = gpar(fontsize = 8),\n    labels_gp = gpar(fontsize = 7)\n  ),\n  top_annotation = HeatmapAnnotation(\n    lines = anno_enriched(\n      gp = gpar(col = cluster_colors),\n      height = unit(2, \"cm\"),\n      axis_param = list(\n        side = \"right\",\n        facing = \"inside\",\n        gp = gpar(\n          fontsize = 7,\n          lwd = 0.4\n        )\n      )\n    )\n  )\n)\n}\n\n\n\n\n\neh_11h &lt;- make_EH(norm_mat = mat_AS$ATAC_11half, split_rows = split_change, hm_name = \"E11.5\")\neh_15h &lt;- make_EH(norm_mat = mat_AS$ATAC_15half, split_rows = split_change, hm_name = \"E15.5\", col_fill = \"#e6fff2\")\n\ndraw(eh_11h + eh_15h, merge_legend = TRUE)"
  },
  {
    "objectID": "day1/day1-2_atac.html#another-way-to-make-annotations-for-split",
    "href": "day1/day1-2_atac.html#another-way-to-make-annotations-for-split",
    "title": "Exercise 2",
    "section": "",
    "text": "It is probably a good idea to represent clusters with colors, instead of text\n\neh_11h &lt;- make_EH(norm_mat = mat_AS$ATAC_11half, hm_name = \"E11.5\")\neh_15h &lt;- make_EH(norm_mat = mat_AS$ATAC_15half, hm_name = \"E15.5\", col_fill = \"#e6fff2\")\n\nrow_order_eh &lt;- row_order(eh_11h)\n\nWarning: The heatmap has not been initialized. You might have different results\nif you repeatedly execute this function, e.g. when row_km/column_km was\nset. It is more suggested to do as `ht = draw(ht); row_order(ht)`.\n\nanno_hm &lt;- Heatmap(\n  split_change,\n  col = c(\"red\", \"blue\"), \n  name = \"Change\",\n  show_row_names = FALSE, \n  show_column_names = FALSE, \n  width = unit(3, \"mm\"),\n  height = unit(8, \"cm\"),\n  row_order = row_order_eh,\n  row_title_gp = gpar(fontsize = 0)\n)\n\ndraw(anno_hm + eh_11h + eh_15h, split = split_change, merge_legend = TRUE)"
  },
  {
    "objectID": "day1/day1-2_atac.html#question-1",
    "href": "day1/day1-2_atac.html#question-1",
    "title": "Exercise 2",
    "section": "",
    "text": "Can you make split the Enriched Heatmap based on the annotations?\nHint: mid_peaks$ATAC_anno contain annotations for the regions.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nsplit_anno &lt;- mid_peaks$ATAC_anno\nnames(split_anno) &lt;- names(mid_peaks)\n\nhead(split_anno)\n\n      peak_1       peak_2       peak_3       peak_4       peak_5       peak_6 \n  \"Promoter\"     \"Intron\"   \"Promoter\" \"Intergenic\"   \"Promoter\" \"Intergenic\" \n\ncols_an &lt;- RColorBrewer::brewer.pal(n = length(unique(split_anno)), name = \"Set1\")\n\nanno_an &lt;- Heatmap(\n  split_anno,\n  col = cols_an, \n  name = \"anno\",\n  show_row_names = FALSE, \n  show_column_names = FALSE, \n  width = unit(3, \"mm\"),\n  height = unit(8, \"cm\"),\n  row_order = row_order_eh,\n  row_title_gp = gpar(fontsize = 0)\n)\n\ndraw(anno_an + eh_11h + eh_15h, split = split_anno, merge_legend = TRUE)"
  },
  {
    "objectID": "day1/day1-2_atac.html#question-2",
    "href": "day1/day1-2_atac.html#question-2",
    "title": "Exercise 2",
    "section": "",
    "text": "Can you make split the Enriched Heatmap based on the annotations and change in direction?\nHint: mid_peaks$ATAC_anno contain annotations for the regions. mid_peaks$ATAC_logFC contain sign of change.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nsplit_anno_dir &lt;- paste(mid_peaks$ATAC_anno, ifelse(mid_peaks$ATAC_logFC &gt; 0, yes = \"Inc\", no = \"Dec\"))\nnames(split_anno_dir) &lt;- names(mid_peaks)\n\nhead(split_anno_dir)\n\n          peak_1           peak_2           peak_3           peak_4 \n  \"Promoter Inc\"     \"Intron Inc\"   \"Promoter Dec\" \"Intergenic Dec\" \n          peak_5           peak_6 \n  \"Promoter Inc\" \"Intergenic Dec\" \n\ncols_an &lt;- RColorBrewer::brewer.pal(n = length(unique(split_anno_dir)), name = \"Paired\")\n\nanno_an_dir &lt;- Heatmap(\n  split_anno_dir,\n  col = cols_an, \n  name = \"anno\",\n  show_row_names = FALSE, \n  show_column_names = FALSE, \n  width = unit(3, \"mm\"),\n  height = unit(8, \"cm\"),\n  row_order = row_order_eh,\n  row_title_gp = gpar(fontsize = 0)\n)\n\nThere are 10 unique colors in the vector `col` and 10 unique values in\n`matrix`. `Heatmap()` will treat it as an exact discrete one-to-one\nmapping. If this is not what you want, slightly change the number of\ncolors, e.g. by adding one more color or removing a color.\n\ndraw(anno_an_dir + eh_11h + eh_15h, split = split_anno_dir, merge_legend = TRUE)"
  },
  {
    "objectID": "day1/day1-2_atac.html#question-3",
    "href": "day1/day1-2_atac.html#question-3",
    "title": "Exercise 2",
    "section": "",
    "text": "Can you make split the Enriched Heatmap based on the annotations and change in direction with separate color bars for annotation and direction of change?\nHint: mid_peaks$ATAC_anno contain annotations for the regions. mid_peaks$ATAC_logFC contain sign of change.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\nsplit_anno_df &lt;- data.frame(\n  Annotation = mid_peaks$ATAC_anno,\n  Direction = ifelse(mid_peaks$ATAC_logFC &gt; 0, yes = \"Inc\", no = \"Dec\")\n)\n\nhead(split_anno_df)\n\n  Annotation Direction\n1   Promoter       Inc\n2     Intron       Inc\n3   Promoter       Dec\n4 Intergenic       Dec\n5   Promoter       Inc\n6 Intergenic       Dec\n\ncols_an &lt;- c(\"red\", \"blue\", \n             RColorBrewer::brewer.pal(n = length(unique(split_anno_df$Annotation)), name = \"Set1\")\n)\n\nnames(cols_an) &lt;- c(unique(split_anno_df$Direction), unique(split_anno_df$Annotation))\n\nanno_an_df &lt;- Heatmap(\n  split_anno_df,\n  name = \"anno\",\n  col = cols_an,\n  show_row_names = FALSE, \n  show_column_names = FALSE, \n  width = unit(3, \"mm\"),\n  height = unit(8, \"cm\"),\n  row_order = row_order_eh,\n  row_title_gp = gpar(fontsize = 0)\n)\n\nWarning: The input is a data frame-like object, convert it to a matrix.\n\n\nWarning: Note: not all columns in the data frame are numeric. The data frame\nwill be converted into a character matrix.\n\ndraw(anno_an_df + eh_11h + eh_15h, split = split_anno_dir, merge_legend = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nHeatmap and EnrichedHeatmap serve different functions, however the plots can be combined effortlessly. This makes the visualization of complex data easy"
  },
  {
    "objectID": "course_schedule.html",
    "href": "course_schedule.html",
    "title": "Course schedule",
    "section": "",
    "text": "Note\n\n\n\nApart from the starting time the time schedule is indicative. Because we can not plan a course by the minute, in practice the time points will deviate."
  },
  {
    "objectID": "course_schedule.html#day-1",
    "href": "course_schedule.html#day-1",
    "title": "Course schedule",
    "section": "Day 1",
    "text": "Day 1\n\n\n\nblock\nstart\nend\npresentation\n\n\n\n\nIntroduction\n9:00 AM\n9:30 AM\n\n\n\nBiological introduction\n9:30 AM\n10:30 AM\n\n\n\nBREAK\n10:30 AM\n11:00 AM\nBREAK\n\n\nDataset and data structure 1\n11:00 AM\n12:00 PM\n\n\n\nLUNCH\n12:00 PM\n1:00 PM\nLUNCH\n\n\nDataset and data structure 2\n1:00 PM\n2:00 PM\nDataset\n\n\nNormalization and Visualization 1\n2:00 PM\n3:00 PM\nDataset\n\n\nBREAK\n3:00 PM\n3:30 PM\nBREAK\n\n\nNormalization and Visualization 2\n3:30 PM\n4:45 PM\nDataset"
  },
  {
    "objectID": "course_schedule.html#day-2",
    "href": "course_schedule.html#day-2",
    "title": "Course schedule",
    "section": "Day 2",
    "text": "Day 2\n\n\n\nblock\nstart\nend\nsubject\n\n\n\n\nRecap from Day 1\n9:00 AM\n9:15 AM\n\n\n\nData overlap matrix\n9:15 AM\n10:30 AM\nData overlap\n\n\nBREAK\n10:30 AM\n11:00 AM\nBREAK\n\n\nATAC-seq and RNA-seq plot\n11:00 AM\n12:00 PM\n\n\n\nLUNCH\n12:00 PM\n1:00 PM\nLUNCH\n\n\nMulti-omics data visualization\n1:00 PM\n2:30 PM\nGenomic regions\n\n\nBREAK\n2:30 PM\n3:00 PM\nBREAK\n\n\nFunctional analysis\n3:00 PM\n5:00 PM\nGO analysis of regions of interest"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "day1/day1-1_dataset.html",
    "href": "day1/day1-1_dataset.html",
    "title": "Exercise 1",
    "section": "",
    "text": "By the end of this notebook, you will be able to:\n\nUnderstand the structure of SummarizedExperiment and GRanges objects in R.\nAccess and manipulate metadata and assays within SummarizedExperiment.\nVisualize and subset genomic intervals using GRanges.\nRecognize how even RNA expression data can be stored as genomic ranges.\n\n\n\n\n\n\n\nNote\n\n\n\nNote: Genomic data types like RNA-seq are often stored as SummarizedExperiment or GRanges, which are efficient for multi-omics integration."
  },
  {
    "objectID": "day1/day1-1_dataset.html#learning-outcomes",
    "href": "day1/day1-1_dataset.html#learning-outcomes",
    "title": "Exercise 1",
    "section": "",
    "text": "By the end of this notebook, you will be able to:\n\nUnderstand the structure of SummarizedExperiment and GRanges objects in R.\nAccess and manipulate metadata and assays within SummarizedExperiment.\nVisualize and subset genomic intervals using GRanges.\nRecognize how even RNA expression data can be stored as genomic ranges.\n\n\n\n\n\n\n\nNote\n\n\n\nNote: Genomic data types like RNA-seq are often stored as SummarizedExperiment or GRanges, which are efficient for multi-omics integration."
  },
  {
    "objectID": "day1/day1-1_dataset.html#download-and-extract-data",
    "href": "day1/day1-1_dataset.html#download-and-extract-data",
    "title": "Exercise 1",
    "section": "Download and Extract Data",
    "text": "Download and Extract Data\n\n# Create a new directory\ndir.create(\"data\")\n\n# Set download limit higher\noptions(timeout=1000)\n\n# Download file\ndownload.file(\n  url = \"https://biology-informed-multiomics.s3.eu-central-1.amazonaws.com/biology-informed-multiomics.tar\",\n  destfile = \"data/data.tar\"\n)\n\n# Unzip file\nuntar(tarfile = \"data/data.tar\", exdir = \"data\")\n\n# Remove tar file\nfile.remove(\"data/data.tar\")"
  },
  {
    "objectID": "day1/day1-1_dataset.html#load-libraries",
    "href": "day1/day1-1_dataset.html#load-libraries",
    "title": "Exercise 1",
    "section": "Load Libraries",
    "text": "Load Libraries\n\nlibrary(ComplexHeatmap)\nlibrary(SummarizedExperiment)\nlibrary(ggplot2)"
  },
  {
    "objectID": "day1/day1-1_dataset.html#load-summarizedexperiment-objects",
    "href": "day1/day1-1_dataset.html#load-summarizedexperiment-objects",
    "title": "Exercise 1",
    "section": "Load SummarizedExperiment Objects",
    "text": "Load SummarizedExperiment Objects\n\nrna &lt;- readRDS(\"data/rna_se.rds\")\natac &lt;- readRDS(\"data/atac_se.rds\")\nh3k4me3 &lt;- readRDS(\"data/h3k4me3_se.rds\")\nh3k4me1 &lt;- readRDS(\"data/h3k4me1_se.rds\")\nh3k27me3 &lt;- readRDS(\"data/h3k27me3_se.rds\")\nh3k27ac &lt;- readRDS(\"data/h3k27ac_se.rds\")"
  },
  {
    "objectID": "day1/day1-1_dataset.html#exercise-1-working-with-summarizedexperiment-se",
    "href": "day1/day1-1_dataset.html#exercise-1-working-with-summarizedexperiment-se",
    "title": "Exercise 1",
    "section": "🧪 Exercise 1: Working with SummarizedExperiment (SE)",
    "text": "🧪 Exercise 1: Working with SummarizedExperiment (SE)\n\n1. Inspect the RNA SE Object\n\nrna\n\nclass: RangedSummarizedExperiment \ndim: 2216 4 \nmetadata(0):\nassays(2): counts logCPM\nrownames(2216): ENSMUSG00000000194 ENSMUSG00000000247 ...\n  ENSMUSG00000103948 ENSMUSG00000104257\nrowData names(18): Row.names gene_id ... PValue qvalue\ncolnames(4): RNA_11half_1.tsv.gz RNA_11half_2.tsv.gz\n  RNA_15half_1.tsv.gz RNA_15half_2.tsv.gz\ncolData names(2): sample group\n\n\n\n\n2. Access rowRanges, colData, and assays\n\nrowRanges(rna)[1:5]\n\nGRanges object with 5 ranges and 18 metadata columns:\n                     seqnames              ranges strand |          Row.names\n                        &lt;Rle&gt;           &lt;IRanges&gt;  &lt;Rle&gt; |        &lt;character&gt;\n  ENSMUSG00000000194     chr2   31152316-31218775      + | ENSMUSG00000000194\n  ENSMUSG00000000247     chr2   38339281-38369733      + | ENSMUSG00000000247\n  ENSMUSG00000000305     chr2 179442431-179899373      + | ENSMUSG00000000305\n  ENSMUSG00000000308     chr2 121357714-121363737      + | ENSMUSG00000000308\n  ENSMUSG00000000359     chr2 152626951-152635198      + | ENSMUSG00000000359\n                         gene_id      SYMBOL               GENENAME\n                     &lt;character&gt; &lt;character&gt;            &lt;character&gt;\n  ENSMUSG00000000194      277463      Gpr107 G protein-coupled re..\n  ENSMUSG00000000247       16870        Lhx2 LIM homeobox protein 2\n  ENSMUSG00000000305       12561        Cdh4             cadherin 4\n  ENSMUSG00000000308       12716       Ckmt1 creatine kinase, mit..\n  ENSMUSG00000000359       19700        Rem1 rad and gem related ..\n                                ENSEMBL geneLength     geneChr geneStart\n                            &lt;character&gt;  &lt;integer&gt; &lt;character&gt; &lt;integer&gt;\n  ENSMUSG00000000194 ENSMUSG00000000194      66460        chr2  31152316\n  ENSMUSG00000000247 ENSMUSG00000000247      30453        chr2  38339281\n  ENSMUSG00000000305 ENSMUSG00000000305     456943        chr2 179442431\n  ENSMUSG00000000308 ENSMUSG00000000308       6024        chr2 121357714\n  ENSMUSG00000000359 ENSMUSG00000000359       8248        chr2 152626951\n                       geneEnd  geneStrand      geneId          transcriptId\n                     &lt;integer&gt; &lt;character&gt; &lt;character&gt;           &lt;character&gt;\n  ENSMUSG00000000194  31218775           +      277463  ENSMUST00000056433.6\n  ENSMUSG00000000247  38369733           +       16870  ENSMUST00000143783.8\n  ENSMUSG00000000305 179899373           +       12561 ENSMUST00000000314.12\n  ENSMUSG00000000308 121363737           +       12716  ENSMUST00000125812.7\n  ENSMUSG00000000359 152635198           +       19700  ENSMUST00000000369.3\n                            anno     logFC    logCPM         F      PValue\n                     &lt;character&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt;   &lt;numeric&gt;\n  ENSMUSG00000000194        Gene   1.12372   8.74812 137.26552 8.72516e-05\n  ENSMUSG00000000247        Gene  -1.60859   5.40640  11.86742 1.87646e-02\n  ENSMUSG00000000305        Gene   2.11822   9.25294 504.51658 3.72434e-06\n  ENSMUSG00000000308        Gene   3.79826   8.63364 420.96960 5.79582e-06\n  ENSMUSG00000000359        Gene   1.90855   3.12253   2.67341 1.64139e-01\n                          qvalue\n                       &lt;numeric&gt;\n  ENSMUSG00000000194 0.000834921\n  ENSMUSG00000000247 0.033322641\n  ENSMUSG00000000305 0.000490337\n  ENSMUSG00000000308 0.000490337\n  ENSMUSG00000000359 0.211786009\n  -------\n  seqinfo: 66 sequences from an unspecified genome; no seqlengths\n\ncolData(rna)\n\nDataFrame with 4 rows and 2 columns\n                                 sample    group\n                            &lt;character&gt; &lt;factor&gt;\nRNA_11half_1.tsv.gz RNA_11half_1.tsv.gz   11half\nRNA_11half_2.tsv.gz RNA_11half_2.tsv.gz   11half\nRNA_15half_1.tsv.gz RNA_15half_1.tsv.gz   15half\nRNA_15half_2.tsv.gz RNA_15half_2.tsv.gz   15half\n\nassay(rna)[1:5,]\n\n                   RNA_11half_1.tsv.gz RNA_11half_2.tsv.gz RNA_15half_1.tsv.gz\nENSMUSG00000000194                 848              893.35             2619.55\nENSMUSG00000000247                 169              246.00               51.00\nENSMUSG00000000305                 694              778.00             4431.00\nENSMUSG00000000308                 148              195.00             3011.00\nENSMUSG00000000359                   8               13.00              101.00\n                   RNA_15half_2.tsv.gz\nENSMUSG00000000194             3046.41\nENSMUSG00000000247              153.00\nENSMUSG00000000305             5102.00\nENSMUSG00000000308             4131.00\nENSMUSG00000000359               16.00\n\nassays(rna)\n\nList of length 2\nnames(2): counts logCPM\n\n\n\n\n3. Boxplot of Expression for a Few Genes\n\ndf &lt;- as.data.frame(t(assay(rna)[1:5, ]))\ndf$sample &lt;- rownames(df)\ndf_long &lt;- pivot_longer(df, -sample, names_to = \"gene\", values_to = \"expression\")\n\nggplot(df_long, aes(x = gene, y = expression)) +\n  geom_boxplot(aes(fill = gene)) +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +\n  labs(title = \"Expression Distribution of Selected Genes\",\n       y = \"Expression\", x = \"Genes\") +\n  scale_fill_brewer(palette = \"Set2\")"
  },
  {
    "objectID": "day1/day1-1_dataset.html#question-1",
    "href": "day1/day1-1_dataset.html#question-1",
    "title": "Exercise 1",
    "section": "Question 1",
    "text": "Question 1\nPlease make a boxplot of samples, before and after normalization.\nHint: Check assays of rna object. Raw counts should be converted to log2 to make a comparison.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n# Extract assays\nraw_counts &lt;- assay(rna, \"counts\")\nlogcpm &lt;- assay(rna, \"logCPM\")\n\n# Convert to long data frames for ggplot\ndf_raw &lt;- as.data.frame(raw_counts)\ndf_raw$gene &lt;- rownames(df_raw)\ndf_raw_long &lt;- pivot_longer(df_raw, -gene, names_to = \"sample\", values_to = \"expression\")\ndf_raw_long$assay &lt;- \"Raw Counts\"\ndf_raw_long$expression &lt;- log2(df_raw_long$expression + 1)\n\ndf_log &lt;- as.data.frame(logcpm)\ndf_log$gene &lt;- rownames(df_log)\ndf_log_long &lt;- pivot_longer(df_log, -gene, names_to = \"sample\", values_to = \"expression\")\ndf_log_long$assay &lt;- \"logCPM\"\n\n# Combine both\ndf_combined &lt;- rbind(df_raw_long, df_log_long)\n\n# Set factor for names to make Raw counts to be plotted first\ndf_combined$assay &lt;- factor(df_combined$assay, levels = unique(df_combined$assay))\n\n# Plot boxplot across samples\nggplot(df_combined, aes(x = sample, y = expression, fill = assay)) +\n  geom_boxplot(outlier.size = 0.5, lwd = 0.3) +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n  facet_wrap(~ assay, scales = \"free_y\") +\n  labs(title = \"Sample-wise Expression: Raw vs Normalized\",\n       x = \"Samples\", y = \"Expression\") +\n  scale_fill_brewer(palette = \"Set2\")"
  },
  {
    "objectID": "day1/day1-1_dataset.html#question-2",
    "href": "day1/day1-1_dataset.html#question-2",
    "title": "Exercise 1",
    "section": "Question 2",
    "text": "Question 2\nMake a new SummarizedExperiment object by subsetting rna. Take only first 2 samples and first 10 genes. Check the assays, row and column metadata.\n\n\n\n\n\n\nTip\n\n\n\n\n\n\nrna_subset &lt;- rna[1:10, 1:2]\nrna_subset\n\nclass: RangedSummarizedExperiment \ndim: 10 2 \nmetadata(0):\nassays(2): counts logCPM\nrownames(10): ENSMUSG00000000194 ENSMUSG00000000247 ...\n  ENSMUSG00000000827 ENSMUSG00000000876\nrowData names(18): Row.names gene_id ... PValue qvalue\ncolnames(2): RNA_11half_1.tsv.gz RNA_11half_2.tsv.gz\ncolData names(2): sample group\n\nassays(rna_subset)\n\nList of length 2\nnames(2): counts logCPM\n\nassay(rna_subset, \"counts\")\n\n                   RNA_11half_1.tsv.gz RNA_11half_2.tsv.gz\nENSMUSG00000000194              848.00              893.35\nENSMUSG00000000247              169.00              246.00\nENSMUSG00000000305              694.00              778.00\nENSMUSG00000000308              148.00              195.00\nENSMUSG00000000359                8.00               13.00\nENSMUSG00000000392              349.00              333.00\nENSMUSG00000000823             1851.87             2077.29\nENSMUSG00000000826             5908.00             7011.00\nENSMUSG00000000827             2788.23             2998.49\nENSMUSG00000000876              374.00              400.00\n\nassay(rna_subset, \"logCPM\")\n\n                   RNA_11half_1.tsv.gz RNA_11half_2.tsv.gz\nENSMUSG00000000194            8.086697            8.068900\nENSMUSG00000000247            5.764953            6.211847\nENSMUSG00000000305            7.797861            7.869643\nENSMUSG00000000308            5.574463            5.877929\nENSMUSG00000000359            1.491187            2.054079\nENSMUSG00000000392            6.807747            6.647445\nENSMUSG00000000823            9.212828            9.285543\nENSMUSG00000000826           10.886099           11.040056\nENSMUSG00000000827            9.802991            9.814900\nENSMUSG00000000876            6.907344            6.911323\n\ncolData(rna_subset)\n\nDataFrame with 2 rows and 2 columns\n                                 sample    group\n                            &lt;character&gt; &lt;factor&gt;\nRNA_11half_1.tsv.gz RNA_11half_1.tsv.gz   11half\nRNA_11half_2.tsv.gz RNA_11half_2.tsv.gz   11half\n\nrowData(rna_subset)\n\nDataFrame with 10 rows and 18 columns\n                            Row.names     gene_id      SYMBOL\n                          &lt;character&gt; &lt;character&gt; &lt;character&gt;\nENSMUSG00000000194 ENSMUSG00000000194      277463      Gpr107\nENSMUSG00000000247 ENSMUSG00000000247       16870        Lhx2\nENSMUSG00000000305 ENSMUSG00000000305       12561        Cdh4\nENSMUSG00000000308 ENSMUSG00000000308       12716       Ckmt1\nENSMUSG00000000359 ENSMUSG00000000359       19700        Rem1\nENSMUSG00000000392 ENSMUSG00000000392       14089         Fap\nENSMUSG00000000823 ENSMUSG00000000823      269401     Zfp512b\nENSMUSG00000000826 ENSMUSG00000000826       13002      Dnajc5\nENSMUSG00000000827 ENSMUSG00000000827       66314     Tpd52l2\nENSMUSG00000000876 ENSMUSG00000000876       59038       Pxmp4\n                                 GENENAME            ENSEMBL geneLength\n                              &lt;character&gt;        &lt;character&gt;  &lt;integer&gt;\nENSMUSG00000000194 G protein-coupled re.. ENSMUSG00000000194      66460\nENSMUSG00000000247 LIM homeobox protein 2 ENSMUSG00000000247      30453\nENSMUSG00000000305             cadherin 4 ENSMUSG00000000305     456943\nENSMUSG00000000308 creatine kinase, mit.. ENSMUSG00000000308       6024\nENSMUSG00000000359 rad and gem related .. ENSMUSG00000000359       8248\nENSMUSG00000000392 fibroblast activatio.. ENSMUSG00000000392      73133\nENSMUSG00000000823 zinc finger protein .. ENSMUSG00000000823      10701\nENSMUSG00000000826 DnaJ heat shock prot.. ENSMUSG00000000826      34649\nENSMUSG00000000827 tumor protein D52-li.. ENSMUSG00000000827      20825\nENSMUSG00000000876 peroxisomal membrane.. ENSMUSG00000000876      17951\n                       geneChr geneStart   geneEnd  geneStrand      geneId\n                   &lt;character&gt; &lt;integer&gt; &lt;integer&gt; &lt;character&gt; &lt;character&gt;\nENSMUSG00000000194        chr2  31152316  31218775           +      277463\nENSMUSG00000000247        chr2  38339281  38369733           +       16870\nENSMUSG00000000305        chr2 179442431 179899373           +       12561\nENSMUSG00000000308        chr2 121357714 121363737           +       12716\nENSMUSG00000000359        chr2 152626951 152635198           +       19700\nENSMUSG00000000392        chr2  62500943  62574075           -       14089\nENSMUSG00000000823        chr2 181582103 181592803           -      269401\nENSMUSG00000000826        chr2 181520485 181555133           +       13002\nENSMUSG00000000827        chr2 181497142 181517966           +       66314\nENSMUSG00000000876        chr2 154585758 154603708           -       59038\n                            transcriptId        anno     logFC    logCPM\n                             &lt;character&gt; &lt;character&gt; &lt;numeric&gt; &lt;numeric&gt;\nENSMUSG00000000194  ENSMUST00000056433.6        Gene  1.123717   8.74812\nENSMUSG00000000247  ENSMUST00000143783.8        Gene -1.608592   5.40640\nENSMUSG00000000305 ENSMUST00000000314.12        Gene  2.118219   9.25294\nENSMUSG00000000308  ENSMUST00000125812.7        Gene  3.798256   8.63364\nENSMUSG00000000359  ENSMUST00000000369.3        Gene  1.908545   3.12253\nENSMUSG00000000392  ENSMUST00000102732.9        Gene -2.102269   6.02595\nENSMUSG00000000823  ENSMUST00000108789.8        Gene  0.776790   9.69040\nENSMUSG00000000826 ENSMUST00000072334.11        Gene  0.991148  11.54446\nENSMUSG00000000827  ENSMUST00000184588.7        Gene -0.557763   9.55700\nENSMUSG00000000876 ENSMUST00000000896.10        Gene  0.304488   7.07357\n                           F      PValue      qvalue\n                   &lt;numeric&gt;   &lt;numeric&gt;   &lt;numeric&gt;\nENSMUSG00000000194 137.26552 8.72516e-05 0.000834921\nENSMUSG00000000247  11.86742 1.87646e-02 0.033322641\nENSMUSG00000000305 504.51658 3.72434e-06 0.000490337\nENSMUSG00000000308 420.96960 5.79582e-06 0.000490337\nENSMUSG00000000359   2.67341 1.64139e-01 0.211786009\nENSMUSG00000000392  82.37588 2.92695e-04 0.001579555\nENSMUSG00000000823  21.64298 5.77573e-03 0.012874947\nENSMUSG00000000826  77.71581 3.35396e-04 0.001683051\nENSMUSG00000000827  46.64975 1.08655e-03 0.003701948\nENSMUSG00000000876   4.36632 9.17564e-02 0.127276923\n\nrowRanges(rna_subset)\n\nGRanges object with 10 ranges and 18 metadata columns:\n                     seqnames              ranges strand |          Row.names\n                        &lt;Rle&gt;           &lt;IRanges&gt;  &lt;Rle&gt; |        &lt;character&gt;\n  ENSMUSG00000000194     chr2   31152316-31218775      + | ENSMUSG00000000194\n  ENSMUSG00000000247     chr2   38339281-38369733      + | ENSMUSG00000000247\n  ENSMUSG00000000305     chr2 179442431-179899373      + | ENSMUSG00000000305\n  ENSMUSG00000000308     chr2 121357714-121363737      + | ENSMUSG00000000308\n  ENSMUSG00000000359     chr2 152626951-152635198      + | ENSMUSG00000000359\n  ENSMUSG00000000392     chr2   62500943-62574075      - | ENSMUSG00000000392\n  ENSMUSG00000000823     chr2 181582103-181592803      - | ENSMUSG00000000823\n  ENSMUSG00000000826     chr2 181520485-181555133      + | ENSMUSG00000000826\n  ENSMUSG00000000827     chr2 181497142-181517966      + | ENSMUSG00000000827\n  ENSMUSG00000000876     chr2 154585758-154603708      - | ENSMUSG00000000876\n                         gene_id      SYMBOL               GENENAME\n                     &lt;character&gt; &lt;character&gt;            &lt;character&gt;\n  ENSMUSG00000000194      277463      Gpr107 G protein-coupled re..\n  ENSMUSG00000000247       16870        Lhx2 LIM homeobox protein 2\n  ENSMUSG00000000305       12561        Cdh4             cadherin 4\n  ENSMUSG00000000308       12716       Ckmt1 creatine kinase, mit..\n  ENSMUSG00000000359       19700        Rem1 rad and gem related ..\n  ENSMUSG00000000392       14089         Fap fibroblast activatio..\n  ENSMUSG00000000823      269401     Zfp512b zinc finger protein ..\n  ENSMUSG00000000826       13002      Dnajc5 DnaJ heat shock prot..\n  ENSMUSG00000000827       66314     Tpd52l2 tumor protein D52-li..\n  ENSMUSG00000000876       59038       Pxmp4 peroxisomal membrane..\n                                ENSEMBL geneLength     geneChr geneStart\n                            &lt;character&gt;  &lt;integer&gt; &lt;character&gt; &lt;integer&gt;\n  ENSMUSG00000000194 ENSMUSG00000000194      66460        chr2  31152316\n  ENSMUSG00000000247 ENSMUSG00000000247      30453        chr2  38339281\n  ENSMUSG00000000305 ENSMUSG00000000305     456943        chr2 179442431\n  ENSMUSG00000000308 ENSMUSG00000000308       6024        chr2 121357714\n  ENSMUSG00000000359 ENSMUSG00000000359       8248        chr2 152626951\n  ENSMUSG00000000392 ENSMUSG00000000392      73133        chr2  62500943\n  ENSMUSG00000000823 ENSMUSG00000000823      10701        chr2 181582103\n  ENSMUSG00000000826 ENSMUSG00000000826      34649        chr2 181520485\n  ENSMUSG00000000827 ENSMUSG00000000827      20825        chr2 181497142\n  ENSMUSG00000000876 ENSMUSG00000000876      17951        chr2 154585758\n                       geneEnd  geneStrand      geneId          transcriptId\n                     &lt;integer&gt; &lt;character&gt; &lt;character&gt;           &lt;character&gt;\n  ENSMUSG00000000194  31218775           +      277463  ENSMUST00000056433.6\n  ENSMUSG00000000247  38369733           +       16870  ENSMUST00000143783.8\n  ENSMUSG00000000305 179899373           +       12561 ENSMUST00000000314.12\n  ENSMUSG00000000308 121363737           +       12716  ENSMUST00000125812.7\n  ENSMUSG00000000359 152635198           +       19700  ENSMUST00000000369.3\n  ENSMUSG00000000392  62574075           -       14089  ENSMUST00000102732.9\n  ENSMUSG00000000823 181592803           -      269401  ENSMUST00000108789.8\n  ENSMUSG00000000826 181555133           +       13002 ENSMUST00000072334.11\n  ENSMUSG00000000827 181517966           +       66314  ENSMUST00000184588.7\n  ENSMUSG00000000876 154603708           -       59038 ENSMUST00000000896.10\n                            anno     logFC    logCPM         F      PValue\n                     &lt;character&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt;   &lt;numeric&gt;\n  ENSMUSG00000000194        Gene  1.123717   8.74812 137.26552 8.72516e-05\n  ENSMUSG00000000247        Gene -1.608592   5.40640  11.86742 1.87646e-02\n  ENSMUSG00000000305        Gene  2.118219   9.25294 504.51658 3.72434e-06\n  ENSMUSG00000000308        Gene  3.798256   8.63364 420.96960 5.79582e-06\n  ENSMUSG00000000359        Gene  1.908545   3.12253   2.67341 1.64139e-01\n  ENSMUSG00000000392        Gene -2.102269   6.02595  82.37588 2.92695e-04\n  ENSMUSG00000000823        Gene  0.776790   9.69040  21.64298 5.77573e-03\n  ENSMUSG00000000826        Gene  0.991148  11.54446  77.71581 3.35396e-04\n  ENSMUSG00000000827        Gene -0.557763   9.55700  46.64975 1.08655e-03\n  ENSMUSG00000000876        Gene  0.304488   7.07357   4.36632 9.17564e-02\n                          qvalue\n                       &lt;numeric&gt;\n  ENSMUSG00000000194 0.000834921\n  ENSMUSG00000000247 0.033322641\n  ENSMUSG00000000305 0.000490337\n  ENSMUSG00000000308 0.000490337\n  ENSMUSG00000000359 0.211786009\n  ENSMUSG00000000392 0.001579555\n  ENSMUSG00000000823 0.012874947\n  ENSMUSG00000000826 0.001683051\n  ENSMUSG00000000827 0.003701948\n  ENSMUSG00000000876 0.127276923\n  -------\n  seqinfo: 66 sequences from an unspecified genome; no seqlengths"
  },
  {
    "objectID": "day1/day1-1_dataset.html#question-3",
    "href": "day1/day1-1_dataset.html#question-3",
    "title": "Exercise 1",
    "section": "Question 3",
    "text": "Question 3\nTry to run all other commands from the following image on other SE objects as well"
  },
  {
    "objectID": "day1/day1-1_dataset.html#exercise-2-working-with-granges",
    "href": "day1/day1-1_dataset.html#exercise-2-working-with-granges",
    "title": "Exercise 1",
    "section": "🧪 Exercise 2: Working with GRanges",
    "text": "🧪 Exercise 2: Working with GRanges\n\n1. Extract and Inspect GRanges from ATAC-seq\n\ngr &lt;- rowRanges(atac)\ngr\n\nGRanges object with 3656 ranges and 18 metadata columns:\n         seqnames              ranges strand |             annotation   geneChr\n            &lt;Rle&gt;           &lt;IRanges&gt;  &lt;Rle&gt; |            &lt;character&gt; &lt;integer&gt;\n     [1]     chr1     3670547-3672665      * |       Promoter (&lt;=1kb)         1\n     [2]     chr1     4332510-4332710      * | Intron (ENSMUST00000..         1\n     [3]     chr1     4491755-4492573      * |       Promoter (1-2kb)         1\n     [4]     chr1     4571186-4572423      * |      Distal Intergenic         1\n     [5]     chr1     4785062-4786325      * |       Promoter (&lt;=1kb)         1\n     ...      ...                 ...    ... .                    ...       ...\n  [3652]     chr2 181764664-181764891      * |       Promoter (1-2kb)         2\n  [3653]     chr2 181766881-181767875      * |       Promoter (&lt;=1kb)         2\n  [3654]     chr2 181837244-181838655      * |       Promoter (&lt;=1kb)         2\n  [3655]     chr2 181863853-181865066      * |       Promoter (&lt;=1kb)         2\n  [3656]     chr2 181918525-181918853      * |      Distal Intergenic         2\n         geneStart   geneEnd geneLength geneStrand      geneId\n         &lt;integer&gt; &lt;integer&gt;  &lt;integer&gt;  &lt;integer&gt; &lt;character&gt;\n     [1]   3214482   3671498     457017          2      497097\n     [2]   4344146   4360314      16169          2       19888\n     [3]   4492465   4493735       1271          2       20671\n     [4]   4491390   4497354       5965          2       20671\n     [5]   4773206   4785710      12505          2       27395\n     ...       ...       ...        ...        ...         ...\n  [3652] 181763332 181827797      64466          1       17932\n  [3653] 181767029 181795892      28864          1       17932\n  [3654] 181837854 181857461      19608          1      245867\n  [3655] 181864337 181870830       6494          1       67005\n  [3656] 181864360 181866209       1850          1       67005\n                  transcriptId distanceToTSS            ENSEMBL      SYMBOL\n                   &lt;character&gt;     &lt;numeric&gt;        &lt;character&gt; &lt;character&gt;\n     [1]  ENSMUST00000070533.4             0 ENSMUSG00000051951        Xkr4\n     [2]  ENSMUST00000027032.5         27604 ENSMUSG00000025900         Rp1\n     [3]  ENSMUST00000191939.1          1162 ENSMUSG00000025902       Sox17\n     [4]  ENSMUST00000192650.5        -73832 ENSMUSG00000025902       Sox17\n     [5]  ENSMUST00000130201.7             0 ENSMUSG00000033845      Mrpl15\n     ...                   ...           ...                ...         ...\n  [3652] ENSMUST00000081125.10          1332 ENSMUSG00000010505        Myt1\n  [3653]  ENSMUST00000156190.7             0 ENSMUSG00000010505        Myt1\n  [3654] ENSMUST00000029116.13             0 ENSMUSG00000027589      Pcmtd2\n  [3655]  ENSMUST00000039551.8             0 ENSMUSG00000038628      Polr3k\n  [3656]  ENSMUST00000153214.1         54165 ENSMUSG00000038628      Polr3k\n                       GENENAME        anno     logFC    logCPM         F\n                    &lt;character&gt; &lt;character&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt;\n     [1] X-linked Kx blood gr..    Promoter  0.602984  10.45378  41.78446\n     [2] retinitis pigmentosa..      Intron  0.855748   5.18424   3.68371\n     [3] SRY (sex determining..    Promoter -0.620926   7.13469   9.14522\n     [4] SRY (sex determining..  Intergenic -0.511046   8.90885  15.15688\n     [5] mitochondrial riboso..    Promoter  0.540908   8.63469  15.08892\n     ...                    ...         ...       ...       ...       ...\n  [3652] myelin transcription..    Promoter -1.275275   5.54135  10.44866\n  [3653] myelin transcription..    Promoter  0.477658   7.56969   6.03877\n  [3654] protein-L-isoasparta..    Promoter  0.689247   7.92175  16.67881\n  [3655] polymerase (RNA) III..    Promoter  0.241693   9.05746   4.06676\n  [3656] polymerase (RNA) III..  Intergenic  0.394577   6.84745   2.73331\n              PValue      qvalue\n           &lt;numeric&gt;   &lt;numeric&gt;\n     [1] 6.58453e-08 4.81983e-07\n     [2] 6.13517e-02 9.28785e-02\n     [3] 4.12368e-03 8.38540e-03\n     [4] 3.27158e-04 8.67115e-04\n     [5] 3.36058e-04 8.82634e-04\n     ...         ...         ...\n  [3652] 0.002309221  0.00497558\n  [3653] 0.017945118  0.03116850\n  [3654] 0.000181039  0.00051468\n  [3655] 0.049773014  0.07677364\n  [3656] 0.105289776  0.15077925\n  -------\n  seqinfo: 21 sequences from an unspecified genome; no seqlengths\n\n\n\n\n2. Subset Regions on chr1 with Width &gt; 1000 bp\n\nsubset_gr &lt;- gr[seqnames(gr) == \"chr1\" & width(gr) &gt; 1000]\nsubset_gr\n\nGRanges object with 838 ranges and 18 metadata columns:\n        seqnames              ranges strand |        annotation   geneChr\n           &lt;Rle&gt;           &lt;IRanges&gt;  &lt;Rle&gt; |       &lt;character&gt; &lt;integer&gt;\n    [1]     chr1     3670547-3672665      * |  Promoter (&lt;=1kb)         1\n    [2]     chr1     4571186-4572423      * | Distal Intergenic         1\n    [3]     chr1     4785062-4786325      * |  Promoter (&lt;=1kb)         1\n    [4]     chr1     4807268-4808558      * |  Promoter (&lt;=1kb)         1\n    [5]     chr1     4857303-4858480      * |  Promoter (&lt;=1kb)         1\n    ...      ...                 ...    ... .               ...       ...\n  [834]     chr1 193968000-193969035      * | Distal Intergenic         1\n  [835]     chr1 194160689-194161978      * | Distal Intergenic         1\n  [836]     chr1 194619386-194621007      * |  Promoter (&lt;=1kb)         1\n  [837]     chr1 194879295-194880523      * | Distal Intergenic         1\n  [838]     chr1 194976000-194977461      * |  Promoter (&lt;=1kb)         1\n        geneStart   geneEnd geneLength geneStrand      geneId\n        &lt;integer&gt; &lt;integer&gt;  &lt;integer&gt;  &lt;integer&gt; &lt;character&gt;\n    [1]   3214482   3671498     457017          2      497097\n    [2]   4491390   4497354       5965          2       20671\n    [3]   4773206   4785710      12505          2       27395\n    [4]   4807788   4848410      40623          1       18777\n    [5]   4857814   4897905      40092          1       21399\n    ...       ...       ...        ...        ...         ...\n  [834] 194212187 194222759      10573          2       74942\n  [835] 194212187 194222759      10573          2       74942\n  [836] 194619825 194816869     197045          1       18845\n  [837] 194822001 194822064         64          1   100628615\n  [838] 194955759 194976960      21202          2      320400\n                 transcriptId distanceToTSS            ENSEMBL        SYMBOL\n                  &lt;character&gt;     &lt;numeric&gt;        &lt;character&gt;   &lt;character&gt;\n    [1]  ENSMUST00000070533.4             0 ENSMUSG00000051951          Xkr4\n    [2]  ENSMUST00000192650.5        -73832 ENSMUSG00000025902         Sox17\n    [3]  ENSMUST00000130201.7             0 ENSMUSG00000033845        Mrpl15\n    [4]  ENSMUST00000134384.7             0 ENSMUSG00000025903        Lypla1\n    [5] ENSMUST00000081551.13             0 ENSMUSG00000033813         Tcea1\n    ...                   ...           ...                ...           ...\n  [834]  ENSMUST00000193395.1        253724 ENSMUSG00000103692 4930503O07Rik\n  [835]  ENSMUST00000193395.1         60781 ENSMUSG00000103692 4930503O07Rik\n  [836] ENSMUST00000027952.11             0 ENSMUSG00000026640        Plxna2\n  [837]  ENSMUST00000174892.1         57294 ENSMUSG00000092633       Mir3962\n  [838]  ENSMUST00000180780.2             0 ENSMUSG00000097325       Gm16897\n                      GENENAME        anno      logFC    logCPM         F\n                   &lt;character&gt; &lt;character&gt;  &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt;\n    [1] X-linked Kx blood gr..    Promoter  0.6029841  10.45378 41.784460\n    [2] SRY (sex determining..  Intergenic -0.5110459   8.90885 15.156883\n    [3] mitochondrial riboso..    Promoter  0.5409079   8.63469 15.088922\n    [4]    lysophospholipase 1    Promoter  0.0485083   9.02241  0.158018\n    [5] transcription elonga..    Promoter  0.4092797   9.92134 14.681270\n    ...                    ...         ...        ...       ...       ...\n  [834] RIKEN cDNA 4930503O0..  Intergenic   1.789029   6.37400  36.41420\n  [835] RIKEN cDNA 4930503O0..  Intergenic  -2.621150   7.53898 143.60529\n  [836]              plexin A2    Promoter  -0.444863   9.24715  14.79019\n  [837]          microRNA 3962  Intergenic  -1.195438   6.95062  28.66158\n  [838]  predicted gene, 16897    Promoter  -0.246053   8.75503   3.60378\n             PValue      qvalue\n          &lt;numeric&gt;   &lt;numeric&gt;\n    [1] 6.58453e-08 4.81983e-07\n    [2] 3.27158e-04 8.67115e-04\n    [3] 3.36058e-04 8.82634e-04\n    [4] 6.92882e-01 7.45491e-01\n    [5] 3.95063e-04 1.01572e-03\n    ...         ...         ...\n  [834] 2.85224e-07 1.73797e-06\n  [835] 1.50833e-15 1.77316e-13\n  [836] 3.78302e-04 9.79514e-04\n  [837] 2.86565e-06 1.28866e-05\n  [838] 6.41228e-02 9.63951e-02\n  -------\n  seqinfo: 21 sequences from an unspecified genome; no seqlengths\n\n\n\n\n3. Plot Width Distribution of Genomic Ranges\n\ndf_gr &lt;- as.data.frame(gr)\n\nggplot(df_gr, aes(x = width)) +\n  geom_histogram(bins = 50, fill = \"#3366cc\", color = \"white\") +\n  theme_minimal() +\n  labs(title = \"Width Distribution of Genomic Ranges\",\n       x = \"Width (bp)\", y = \"Count\")"
  },
  {
    "objectID": "day1/day1-1_dataset.html#bonus-heatmap-of-h3k27ac-signal",
    "href": "day1/day1-1_dataset.html#bonus-heatmap-of-h3k27ac-signal",
    "title": "Exercise 1",
    "section": "🔎 Bonus: Heatmap of H3K27ac Signal",
    "text": "🔎 Bonus: Heatmap of H3K27ac Signal\n\nmat &lt;- assay(h3k27ac)\n\nHeatmap(mat[1:50, ],\n        name = \"H3K27ac\",\n        show_row_names = FALSE,\n        show_column_names = TRUE,\n        cluster_rows = TRUE,\n        cluster_columns = TRUE)"
  },
  {
    "objectID": "day1/day1-1_dataset.html#question-4",
    "href": "day1/day1-1_dataset.html#question-4",
    "title": "Exercise 1",
    "section": "Question 4",
    "text": "Question 4\nTry to run all other commands from the following image on other GRanges from SE objects as well\n\n\n\n\n\n\n\nImportant\n\n\n\nUnderstanding how different omics layers are represented in SE and GRanges objects is essential for multi-omics integration, visualization, and downstream analysis."
  },
  {
    "objectID": "day1/day1-3_chip_rna.html",
    "href": "day1/day1-3_chip_rna.html",
    "title": "Exercise 3",
    "section": "",
    "text": "library(SummarizedExperiment)\nlibrary(EnrichedHeatmap)\nlibrary(gUtils)\nlibrary(rtracklayer)\nlibrary(circlize)\n\n\n\n\nHere we load the SummarizedExperiment for the ATAC-seq data\n\nh3k4me3 &lt;- readRDS(\"data/h3k4me3_se.rds\")\nh3k4me1 &lt;- readRDS(\"data/h3k4me1_se.rds\")\nh3k27me3 &lt;- readRDS(\"data/h3k27me3_se.rds\")\nh3k27ac &lt;- readRDS(\"data/h3k27ac_se.rds\")\n\n\n\n\nSimilar to ATAC-seq data, please create EnrichedHeatmap for all ChIP-seq datasets and observe difference in genome activity at different genomic regions.\n\n\n\n\nrna &lt;- readRDS(\"data/rna_se.rds\")\n\n\n\n\nFor RNA-seq data, we use ComplexHeatmap package to make heatmaps\n\nHeatmap(matrix = assay(rna, \"logCPM\"), \n        name = \"RNA\", \n        cluster_columns = FALSE, \n        show_row_names = FALSE\n)\n\nWarning: The input is a data frame-like object, convert it to a matrix.\n\n\n\n\n\n\n\n\n\n\n\n\ncounts &lt;- assay(rna, \"logCPM\") - rowMeans(\n  assay(rna, \"logCPM\")[, grep(pattern = \"11half\", x = colnames(assay(rna, \"logCPM\")),\n                              value = T)]\n)\n\n\nHeatmap(matrix = counts, \n        name = \"RNA\", \n        cluster_columns = FALSE, \n        show_row_names = FALSE\n)\n\nWarning: The input is a data frame-like object, convert it to a matrix.\n\n\n\n\n\n\n\n\n\nIt is now more clear, which genes are up-regulated and which are down-regulated.\n\n\n\n\ncolData(rna)\n\nDataFrame with 4 rows and 2 columns\n                                 sample    group\n                            &lt;character&gt; &lt;factor&gt;\nRNA_11half_1.tsv.gz RNA_11half_1.tsv.gz   11half\nRNA_11half_2.tsv.gz RNA_11half_2.tsv.gz   11half\nRNA_15half_1.tsv.gz RNA_15half_1.tsv.gz   15half\nRNA_15half_2.tsv.gz RNA_15half_2.tsv.gz   15half\n\n\nWe can add groups information to the heatmap\n\nHeatmap(matrix = counts, \n        name = \"RNA\", \n        cluster_columns = FALSE, \n        show_row_names = FALSE, \n        show_column_names = FALSE,\n        top_annotation = HeatmapAnnotation(df = colData(rna)[,2,drop = FALSE]),\n        width = unit(4, \"cm\"),\n        height = unit(8, \"cm\"),\n        heatmap_legend_param = list(\n            at = scales::pretty_breaks(n = 3)(range(counts, na.rm = TRUE)), \n            title = \"RNA\"\n        )\n)\n\nWarning: The input is a data frame-like object, convert it to a matrix.\n\n\n\n\n\n\n\n\n\n\n\n\n\nSimilar to EnrichedHeatmap, we can also split RNA-seq data based on logFC. Can you try to do this?\n\n\n\n\n\n\nTip\n\n\n\n\n\n\nlogFC &lt;- rowData(rna)[,\"logFC\"]\nnames(logFC) &lt;- rownames(rowData(rna))\n\nlogFC &lt;- ifelse(logFC &gt; 0, \"Up regulated\", \"Down regulated\")\n\nHeatmap(matrix = counts, \n        name = \"RNA\", \n        cluster_columns = FALSE, \n        show_row_names = FALSE, \n        show_column_names = FALSE,\n        top_annotation = HeatmapAnnotation(df = colData(rna)[,2,drop = FALSE]),\n        width = unit(4, \"cm\"),\n        height = unit(8, \"cm\"),\n        heatmap_legend_param = list(\n            at = scales::pretty_breaks(n = 3)(range(counts, na.rm = TRUE)), \n            title = \"RNA\"\n        ),\n        row_split = logFC\n)\n\nWarning: The input is a data frame-like object, convert it to a matrix.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nHeatmap and EnrichedHeatmap have a lot of options common."
  },
  {
    "objectID": "day1/day1-3_chip_rna.html#load-libraries",
    "href": "day1/day1-3_chip_rna.html#load-libraries",
    "title": "Exercise 3",
    "section": "",
    "text": "library(SummarizedExperiment)\nlibrary(EnrichedHeatmap)\nlibrary(gUtils)\nlibrary(rtracklayer)\nlibrary(circlize)"
  },
  {
    "objectID": "day1/day1-3_chip_rna.html#chip-seq-se-object",
    "href": "day1/day1-3_chip_rna.html#chip-seq-se-object",
    "title": "Exercise 3",
    "section": "",
    "text": "Here we load the SummarizedExperiment for the ATAC-seq data\n\nh3k4me3 &lt;- readRDS(\"data/h3k4me3_se.rds\")\nh3k4me1 &lt;- readRDS(\"data/h3k4me1_se.rds\")\nh3k27me3 &lt;- readRDS(\"data/h3k27me3_se.rds\")\nh3k27ac &lt;- readRDS(\"data/h3k27ac_se.rds\")"
  },
  {
    "objectID": "day1/day1-3_chip_rna.html#question-1",
    "href": "day1/day1-3_chip_rna.html#question-1",
    "title": "Exercise 3",
    "section": "",
    "text": "Similar to ATAC-seq data, please create EnrichedHeatmap for all ChIP-seq datasets and observe difference in genome activity at different genomic regions."
  },
  {
    "objectID": "day1/day1-3_chip_rna.html#rna-seq-data",
    "href": "day1/day1-3_chip_rna.html#rna-seq-data",
    "title": "Exercise 3",
    "section": "",
    "text": "rna &lt;- readRDS(\"data/rna_se.rds\")"
  },
  {
    "objectID": "day1/day1-3_chip_rna.html#heatmap-of-counts",
    "href": "day1/day1-3_chip_rna.html#heatmap-of-counts",
    "title": "Exercise 3",
    "section": "",
    "text": "For RNA-seq data, we use ComplexHeatmap package to make heatmaps\n\nHeatmap(matrix = assay(rna, \"logCPM\"), \n        name = \"RNA\", \n        cluster_columns = FALSE, \n        show_row_names = FALSE\n)\n\nWarning: The input is a data frame-like object, convert it to a matrix.\n\n\n\n\n\n\n\n\n\n\n\n\ncounts &lt;- assay(rna, \"logCPM\") - rowMeans(\n  assay(rna, \"logCPM\")[, grep(pattern = \"11half\", x = colnames(assay(rna, \"logCPM\")),\n                              value = T)]\n)\n\n\nHeatmap(matrix = counts, \n        name = \"RNA\", \n        cluster_columns = FALSE, \n        show_row_names = FALSE\n)\n\nWarning: The input is a data frame-like object, convert it to a matrix.\n\n\n\n\n\n\n\n\n\nIt is now more clear, which genes are up-regulated and which are down-regulated.\n\n\n\n\ncolData(rna)\n\nDataFrame with 4 rows and 2 columns\n                                 sample    group\n                            &lt;character&gt; &lt;factor&gt;\nRNA_11half_1.tsv.gz RNA_11half_1.tsv.gz   11half\nRNA_11half_2.tsv.gz RNA_11half_2.tsv.gz   11half\nRNA_15half_1.tsv.gz RNA_15half_1.tsv.gz   15half\nRNA_15half_2.tsv.gz RNA_15half_2.tsv.gz   15half\n\n\nWe can add groups information to the heatmap\n\nHeatmap(matrix = counts, \n        name = \"RNA\", \n        cluster_columns = FALSE, \n        show_row_names = FALSE, \n        show_column_names = FALSE,\n        top_annotation = HeatmapAnnotation(df = colData(rna)[,2,drop = FALSE]),\n        width = unit(4, \"cm\"),\n        height = unit(8, \"cm\"),\n        heatmap_legend_param = list(\n            at = scales::pretty_breaks(n = 3)(range(counts, na.rm = TRUE)), \n            title = \"RNA\"\n        )\n)\n\nWarning: The input is a data frame-like object, convert it to a matrix."
  },
  {
    "objectID": "day1/day1-3_chip_rna.html#question-2",
    "href": "day1/day1-3_chip_rna.html#question-2",
    "title": "Exercise 3",
    "section": "",
    "text": "Similar to EnrichedHeatmap, we can also split RNA-seq data based on logFC. Can you try to do this?\n\n\n\n\n\n\nTip\n\n\n\n\n\n\nlogFC &lt;- rowData(rna)[,\"logFC\"]\nnames(logFC) &lt;- rownames(rowData(rna))\n\nlogFC &lt;- ifelse(logFC &gt; 0, \"Up regulated\", \"Down regulated\")\n\nHeatmap(matrix = counts, \n        name = \"RNA\", \n        cluster_columns = FALSE, \n        show_row_names = FALSE, \n        show_column_names = FALSE,\n        top_annotation = HeatmapAnnotation(df = colData(rna)[,2,drop = FALSE]),\n        width = unit(4, \"cm\"),\n        height = unit(8, \"cm\"),\n        heatmap_legend_param = list(\n            at = scales::pretty_breaks(n = 3)(range(counts, na.rm = TRUE)), \n            title = \"RNA\"\n        ),\n        row_split = logFC\n)\n\nWarning: The input is a data frame-like object, convert it to a matrix.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nHeatmap and EnrichedHeatmap have a lot of options common."
  },
  {
    "objectID": "day2/day2-2_dimensionality_reduction.html",
    "href": "day2/day2-2_dimensionality_reduction.html",
    "title": "Dimensionality reduction",
    "section": "",
    "text": "Making sense of PCA\nUnderstanding t-SNE\nt-SNE explained by Josh Starmer\nUnderstanding UMAP\nVideo by one of the UMAP authors\nMore info on UMAP parameters"
  },
  {
    "objectID": "day2/day2-2_dimensionality_reduction.html#material",
    "href": "day2/day2-2_dimensionality_reduction.html#material",
    "title": "Dimensionality reduction",
    "section": "",
    "text": "Making sense of PCA\nUnderstanding t-SNE\nt-SNE explained by Josh Starmer\nUnderstanding UMAP\nVideo by one of the UMAP authors\nMore info on UMAP parameters"
  },
  {
    "objectID": "day2/day2-4_clustering.html",
    "href": "day2/day2-4_clustering.html",
    "title": "Clustering",
    "section": "",
    "text": "Evaluation of clustering methods"
  },
  {
    "objectID": "day2/day2-4_clustering.html#material",
    "href": "day2/day2-4_clustering.html#material",
    "title": "Clustering",
    "section": "",
    "text": "Evaluation of clustering methods"
  },
  {
    "objectID": "day2/day3-2_differential_gene_expression.html",
    "href": "day2/day3-2_differential_gene_expression.html",
    "title": "Differential gene expression",
    "section": "",
    "text": "More information on pseudobulk analysis\nMuscat for pseudobulk DGE.\nPaper on the robustness of different differential expression analysis methods"
  },
  {
    "objectID": "day2/day3-2_differential_gene_expression.html#material",
    "href": "day2/day3-2_differential_gene_expression.html#material",
    "title": "Differential gene expression",
    "section": "",
    "text": "More information on pseudobulk analysis\nMuscat for pseudobulk DGE.\nPaper on the robustness of different differential expression analysis methods"
  },
  {
    "objectID": "day2/day3-2_differential_gene_expression.html#exercises",
    "href": "day2/day3-2_differential_gene_expression.html#exercises",
    "title": "Differential gene expression",
    "section": "Exercises",
    "text": "Exercises\n\nFind all markers for each cluster\nLoad the seu dataset you have created yesterday:\n\n\n\n\n\n\nKeep the object\n\n\n\nKeep the tum_vs_norm and limma_de objects because we will use this output later for the enrichment analysis in the next section."
  },
  {
    "objectID": "exercises/exercise1.html",
    "href": "exercises/exercise1.html",
    "title": "Project 1",
    "section": "",
    "text": "Project 1 is about a single cell sequencing project of zebrafish retina. Photoreceptors were damaged with MNU and the response was investigated with help of transgenic fish that contained contstruct with a non-coding element (careg) regulating attached to a EGFP transcript, that can be used as regenerative activation marker. For single-cell transcriptomics analysis, cell suspensions were created from retinal cells, and processed with the 10x 3’ kit."
  },
  {
    "objectID": "exercises/exercise1.html#available-data",
    "href": "exercises/exercise1.html#available-data",
    "title": "Project 1",
    "section": "Available data",
    "text": "Available data\nData has been downloaded and prepared for you from GEO GSE202212. The count matrices are created with cellranger. To create the count tables, the EGFP sequence was added to the reference genome. The gene name of EGFP is EGFP.\nIn order to download the data, run:\n\nwget https://single-cell-transcriptomics.s3.eu-central-1.amazonaws.com/projects/data/project1.tar.gz\ntar -xzcvf project1.tar.gz\n\nAfter extracting, a directory project1 appears with the following content:\n.\n├── data\n│   ├── 10dp1\n│   │   ├── filtered_feature_bc_matrix\n│   │   │   ├── barcodes.tsv.gz\n│   │   │   ├── features.tsv.gz\n│   │   │   └── matrix.mtx.gz\n│   │   └── web_summary.html\n│   ├── 10dp2\n│   │   ├── filtered_feature_bc_matrix\n│   │   │   ├── barcodes.tsv.gz\n│   │   │   ├── features.tsv.gz\n│   │   │   └── matrix.mtx.gz\n│   │   └── web_summary.html\n│   ├── 3dp1\n│   │   ├── filtered_feature_bc_matrix\n│   │   │   ├── barcodes.tsv.gz\n│   │   │   ├── features.tsv.gz\n│   │   │   └── matrix.mtx.gz\n│   │   └── web_summary.html\n│   ├── 3dp2\n│   │   ├── filtered_feature_bc_matrix\n│   │   │   ├── barcodes.tsv.gz\n│   │   │   ├── features.tsv.gz\n│   │   │   └── matrix.mtx.gz\n│   │   └── web_summary.html\n│   ├── 7dp1\n│   │   ├── filtered_feature_bc_matrix\n│   │   │   ├── barcodes.tsv.gz\n│   │   │   ├── features.tsv.gz\n│   │   │   └── matrix.mtx.gz\n│   │   └── web_summary.html\n│   ├── 7dp2\n│   │   ├── filtered_feature_bc_matrix\n│   │   │   ├── barcodes.tsv.gz\n│   │   │   ├── features.tsv.gz\n│   │   │   └── matrix.mtx.gz\n│   │   └── web_summary.html\n│   ├── ctrl1\n│   │   ├── filtered_feature_bc_matrix\n│   │   │   ├── barcodes.tsv.gz\n│   │   │   ├── features.tsv.gz\n│   │   │   └── matrix.mtx.gz\n│   │   └── web_summary.html\n│   └── ctrl2\n│       ├── filtered_feature_bc_matrix\n│       │   ├── barcodes.tsv.gz\n│       │   ├── features.tsv.gz\n│       │   └── matrix.mtx.gz\n│       └── web_summary.html\n└── paper.pdf\n\n17 directories, 33 files\nShowing us that we have two replicates per treatment, and four treatments:\n\nctrl: controls\n3dp: 3 days post injury\n7dp: 7 days post injury\n10dp: 10 days post injury\n\nNow create a new project in the project1 directory (Project (None) &gt; New Project …), and create Seurat object from the count matrices:\n\n\n\n\n\n\nProject exercise\n\n\n\nwith this dataset, go through the steps we have performed during the course, and try to reproduce the results provided in the paper. Pay specific attention to quality control, clustering and annotation."
  },
  {
    "objectID": "exercises/exercise1.html#tips",
    "href": "exercises/exercise1.html#tips",
    "title": "Project 1",
    "section": "Tips",
    "text": "Tips\n\nFor mitochondrial genes, ribosomol genes and hemoglobin genes you can use the following patterns: \"^mt-\", \"^rp[sl]\" and \"^hb[^(p)]\".\nWork iterative; meaning that based on results of an analyis, adjust the previous analysis. For example, if clustering is not according to cell types, try to adjust the number of components or the resolution."
  },
  {
    "objectID": "exercises/exercise3.html",
    "href": "exercises/exercise3.html",
    "title": "Project 3",
    "section": "",
    "text": "Project 3 focuses on understanding the role of type I interferon (IFN-I) responsiveness in shaping immune outcomes following PD1 blockade therapy; paper. Type I interferons play a dual role in cancer immunotherapy, promoting both anti-tumor immunity and immune suppression through T cell exhaustion. To investigate how pre-existing IFN-I responses influence therapeutic success, this study utilizes scRNA-seq data from healthy donors and 8 treated patients to analyze transcriptional responses in immune cells.\nUnsupervised clustering of transcriptional profiles revealed distinct immune cell populations and IFN-I-induced responses. Differences in IFN-I responsiveness were linked to immune cell states and transcriptional programs that influence therapy outcomes. Patients with lower pre-therapy IFN-I responsiveness in CD4 and CD8 effector T cells (Teff cells) exhibited transcriptional signatures associated with improved immune function, whereas highly responsive Teff cells displayed gene expression patterns linked to immune dysfunction and therapy resistance.\nFurther analysis identified epigenetically imprinted IFN-I response states that predefine immune reactivity to therapy. Coexpression and network analyses demonstrated that IFN-I responsiveness influences functional T cell programs and systemic immune coordination. This study provides insights into how pre-existing immune states impact therapeutic success and highlights transcriptional markers that could be used to predict patient outcomes in PD1 blockade immunotherapy."
  },
  {
    "objectID": "exercises/exercise3.html#available-data",
    "href": "exercises/exercise3.html#available-data",
    "title": "Project 3",
    "section": "Available data",
    "text": "Available data\nData has been downloaded and prepared for you from GEO GSE199994.\nIn order to download the data, run:\n\nwget https://single-cell-transcriptomics.s3.eu-central-1.amazonaws.com/projects/data/project3.tar.gz\ntar -xzvf project3.tar.gz\n\nGSE199994/\n├── data\n│   ├── HD1\n│   │   ├── barcodes.tsv.gz\n│   │   ├── features.tsv.gz\n│   │   └── matrix.mtx.gz\n│   ├── HD2\n│   │   ├── barcodes.tsv.gz\n│   │   ├── features.tsv.gz\n│   │   └── matrix.mtx.gz\n│   ├── P1\n│   │   ├── barcodes.tsv.gz\n│   │   ├── features.tsv.gz\n│   │   └── matrix.mtx.gz\n│   ├── P2\n│   │   ├── barcodes.tsv.gz\n│   │   ├── features.tsv.gz\n│   │   └── matrix.mtx.gz\n│   ├── P3\n│   │   ├── barcodes.tsv.gz\n│   │   ├── features.tsv.gz\n│   │   └── matrix.mtx.gz\n│   ├── P4\n│   │   ├── barcodes.tsv.gz\n│   │   ├── features.tsv.gz\n│   │   └── matrix.mtx.gz\n│   ├── P5\n│   │   ├── barcodes.tsv.gz\n│   │   ├── features.tsv.gz\n│   │   └── matrix.mtx.gz\n│   ├── P6\n│   │   ├── barcodes.tsv.gz\n│   │   ├── features.tsv.gz\n│   │   └── matrix.mtx.gz\n│   ├── P7\n│   │   ├── barcodes.tsv.gz\n│   │   ├── features.tsv.gz\n│   │   └── matrix.mtx.gz\n│   └── P8\n│       ├── barcodes.tsv.gz\n│       ├── features.tsv.gz\n│       └── matrix.mtx.gz\n└── paper.pdf\nShowing us that we have two replicates of healthy donors and 8 of treatment:\n\nHD: controls\nP: treatments\n\nUse the following code to read the data files in R, and create a combined Seurat object:\n\n\n\n\n\n\nProject exercise\n\n\n\nwith this dataset, go through the steps we have performed during the course, and try to reproduce the results provided in the paper. Pay specific attention to quality control, clustering and annotation."
  },
  {
    "objectID": "exercises/exercise3.html#tips",
    "href": "exercises/exercise3.html#tips",
    "title": "Project 3",
    "section": "Tips",
    "text": "Tips\n\nFor mitochondrial genes, ribosomol genes and hemoglobin genes you can use the following patterns: \"^MT-\", \"^RP[SL]\" and \"^HB[^(P)]\".\nWork iterative; meaning that based on results of an analyis, adjust the previous analysis. For example, if clustering is not according to cell types, try to adjust the number of components or the resolution.\nPlease read the methods section of the paper.\nIf the code for data analysis is available, try to adapt it (for specific parameters).\nCheck the supplementary figures.\nTry to understand if they used some other tools for the data analysis."
  },
  {
    "objectID": "index.html#teachers",
    "href": "index.html#teachers",
    "title": "Biology-informed Multiomics Data Integration and Visualization",
    "section": "Teachers",
    "text": "Teachers\n\nDeepak Tanwar ORCiD"
  },
  {
    "objectID": "index.html#authors",
    "href": "index.html#authors",
    "title": "Biology-informed Multiomics Data Integration and Visualization",
    "section": "Authors",
    "text": "Authors\n\nDeepak Tanwar ORCiD\nGeert van Geest ORCiD\nPatricia Palagi ORCiD"
  },
  {
    "objectID": "index.html#license-copyright",
    "href": "index.html#license-copyright",
    "title": "Biology-informed Multiomics Data Integration and Visualization",
    "section": "License & copyright",
    "text": "License & copyright\nLicense: CC BY 4.0\nCopyright: SIB Swiss Institute of Bioinformatics"
  },
  {
    "objectID": "index.html#learning-outcomes",
    "href": "index.html#learning-outcomes",
    "title": "Biology-informed Multiomics Data Integration and Visualization",
    "section": "Learning outcomes",
    "text": "Learning outcomes\n\nGeneral learning outcomes\nAt the end of the course, the participants are expected to:\n\nImport and integrate pre-processed ATAC-seq, RNA-seq, ChIP-seq, and Bisulfite-seq data using R and Bioconductor packages.\nGenerate and interpret overlap matrices to identify regions of co-occurrence and regulation.\nPerform functional analysis of the results.\nCreate informative and visually appealing plots to represent multi-omics data.\n\n\n\nLearning outcomes explained\nTo reach the general learning outcomes above, we have set a number of smaller learning outcomes. Each chapter starts with these smaller learning outcomes. Use these at the start of a chapter to get an idea what you will learn. Use them also at the end of a chapter to evaluate whether you have learned what you were expected to learn."
  },
  {
    "objectID": "index.html#learning-experiences",
    "href": "index.html#learning-experiences",
    "title": "Biology-informed Multiomics Data Integration and Visualization",
    "section": "Learning experiences",
    "text": "Learning experiences\nTo reach the learning outcomes we will use lectures, exercises, polls and group work. During exercises, you are free to discuss with other participants. During lectures, focus on the lecture only.\n\nExercises\nEach block has practical work involved. Some more than others. The practicals are subdivided into chapters, and we’ll have a (short) discussion after each chapter. All answers to the practicals are incorporated, but they are hidden. Do the exercise first by yourself, before checking out the answer. If your answer is different from the answer in the practicals, try to figure out why they are different."
  }
]